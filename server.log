🔍 Testing database connection...
✅ Database connected successfully
🚀 MuseNest Server Started
📍 Server running on port 3000
🌍 Environment: development
🔗 Health check: http://localhost:3000/health

Next steps:
1. Copy .env.example to .env and configure your database
2. Run: npm run migrate (to set up database)
3. Run: npm run seed (to add sample data)
Loaded 0 active impersonation sessions
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'love-family-people-concept-happy-mother-child-daughter-hugging-home-116698410.webp'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753837555241-932617044.webp',
  originalName: 'love-family-people-concept-happy-mother-child-daughter-hugging-home-116698410.webp',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753837555246_love-family-people-concept-happy-mother-child-daughter-hugging-home-116698410.webp
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10064ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
❌ Enhanced API request error after 10066ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
💾 Storing moderation result in database...
🔌 Got dedicated database connection
✅ Database insert completed in 9ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 2ms
Content flagged and added to moderation queue: 17
🔌 Queue database connection released
✅ Upload processing completed in 10086ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 17 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 17 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'love-family-people-concept-happy-mother-child-daughter-hugging-home-116698410.webp'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753837879277-279860842.webp',
  originalName: 'love-family-people-concept-happy-mother-child-daughter-hugging-home-116698410.webp',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753837879280_love-family-people-concept-happy-mother-child-daughter-hugging-home-116698410.webp
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10046ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10049ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 12ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 2ms
Content flagged and added to moderation queue: 18
🔌 Queue database connection released
✅ Upload processing completed in 10064ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 18 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 18 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'Mother_Dauther.jpg'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753838020142-226468631.jpg',
  originalName: 'Mother_Dauther.jpg',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753838020145_Mother_Dauther.jpg
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10053ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10055ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 5ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 3ms
Content flagged and added to moderation queue: 19
🔌 Queue database connection released
✅ Upload processing completed in 10065ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 19 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 19 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'little-girl-playing-sand-beach-building-towers-32333821.webp'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753838516318-594872105.webp',
  originalName: 'little-girl-playing-sand-beach-building-towers-32333821.webp',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753838516323_little-girl-playing-sand-beach-building-towers-32333821.webp
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10050ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10051ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 5ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 2ms
Content flagged and added to moderation queue: 20
🔌 Queue database connection released
✅ Upload processing completed in 10062ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 20 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 20 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'park.jpg'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753838889864-720888746.jpg',
  originalName: 'park.jpg',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753838889867_park.jpg
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10055ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10057ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 5ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 21
🔌 Queue database connection released
✅ Upload processing completed in 10064ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 21 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 21 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'little-girl-playing-sand-beach-building-towers-32333821.webp'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753839204715-122961670.webp',
  originalName: 'little-girl-playing-sand-beach-building-towers-32333821.webp',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753839204718_little-girl-playing-sand-beach-building-towers-32333821.webp
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10064ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10066ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 6ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 22
🔌 Queue database connection released
✅ Upload processing completed in 10074ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 22 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 22 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'TestPhotoTC.webp'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753839415438-81359947.webp',
  originalName: 'TestPhotoTC.webp',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753839415442_TestPhotoTC.webp
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10059ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10061ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 4ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 23
🔌 Queue database connection released
✅ Upload processing completed in 10068ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 23 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 23 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'Labia.jpg'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753839589998-571423960.jpg',
  originalName: 'Labia.jpg',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753839590013_Labia.jpg
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10920ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10922ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 4ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 24
🔌 Queue database connection released
✅ Upload processing completed in 10934ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 24 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 24 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'r-sex-2.jpeg'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753839803781-91906257.jpeg',
  originalName: 'r-sex-2.jpeg',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753839803784_r-sex-2.jpeg
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10058ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10060ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 4ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 25
🔌 Queue database connection released
✅ Upload processing completed in 10066ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 25 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 25 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'BlowJob.jpg'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753839943622-766847641.jpg',
  originalName: 'BlowJob.jpg',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753839943641_BlowJob.jpg
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10785ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10786ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 4ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 26
🔌 Queue database connection released
✅ Upload processing completed in 10798ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 26 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 26 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
Error ending impersonation: Error: Impersonation session not found
    at ImpersonationManager.endImpersonation (/Users/programmer/Projects/musenest/middleware/impersonation.js:143:23)
    at ImpersonationManager.cleanupExpiredSessions (/Users/programmer/Projects/musenest/middleware/impersonation.js:308:28)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
Error cleaning up expired sessions: Error: Impersonation session not found
    at ImpersonationManager.endImpersonation (/Users/programmer/Projects/musenest/middleware/impersonation.js:143:23)
    at ImpersonationManager.cleanupExpiredSessions (/Users/programmer/Projects/musenest/middleware/impersonation.js:308:28)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
Received upload request: {
  model_id: '1',
  model_slug: 'escortexample',
  usage_intent: 'public_site',
  context_type: 'public_gallery',
  file: 'BlowJob.jpg'
}
🚀 Processing upload for model escortexample with intent: public_site
ContentModerationService processing: {
  filePath: '/Users/programmer/Projects/musenest/temp_uploads/temp-1753842981798-645783956.jpg',
  originalName: 'BlowJob.jpg',
  modelId: 1,
  modelSlug: 'escortexample',
  usageIntent: 'public_site',
  contextType: 'public_gallery'
}
Folder structure created for model: escortexample
🚀 Starting enhanced analysis for image: /Users/programmer/Projects/musenest/public/uploads/escortexample/originals/1753842981813_BlowJob.jpg
📡 Target: 18.221.22.72:5000/analyze
📝 Form data prepared: context_type=public_gallery, model_id=1
📤 Sending form data to enhanced API...
🔌 Socket assigned for enhanced API request
🌐 Socket connected to EC2
⏰ Enhanced API timeout after 10583ms
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
⏰ Socket timeout occurred
✅ Fallback analysis completed after timeout
💾 Storing moderation result in database...
🔌 Got dedicated database connection
❌ Enhanced API request error after 10584ms: socket hang up
Error details: code=ECONNRESET, syscall=undefined
🚨 FALLING BACK TO CONSERVATIVE ANALYSIS
🚨 Using HARDCODED conservative fallback - NO ACTUAL IMAGE ANALYSIS
✅ Fallback analysis completed
✅ Database insert completed in 5ms
🔌 Database connection released
📋 Adding flagged content to moderation queue...
🔌 Got dedicated database connection for queue
✅ Queue insert completed in 1ms
Content flagged and added to moderation queue: 27
🔌 Queue database connection released
✅ Upload processing completed in 10601ms
📊 Result: success=true, status=flagged, nudity=95
📤 Sending successful response to client...
✅ Response sent successfully
🔍 Database check SQL: SELECT 
                id, image_path, original_path, model_id, context_type, usage_intent,
                nudity_score, detected_parts, part_locations, has_nudity,
                face_analysis, face_count, min_detected_age, max_detected_age, 
                underage_detected, age_risk_multiplier,
                image_description, description_text, description_tags, 
                contains_children, description_risk,
                final_risk_score, risk_level, risk_reasoning,
                moderation_status, human_review_required, flagged, 
                auto_rejected, rejection_reason, final_location, created_at
            FROM content_moderation 
            WHERE id = ?
🔍 Parameters: [ 27 ]
⚠️ JSON parsing warning: "[object Object]" is not valid JSON
🔍 Database retrieve SQL: SELECT 
                cm.id, cm.image_path, cm.original_path, cm.nudity_score,
                cm.detected_parts, cm.part_locations, cm.pose_classification,
                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,
                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,
                cm.human_review_required, cm.flagged, cm.final_location,
                cm.created_at, m.name as model_name
            FROM content_moderation cm
            LEFT JOIN models m ON cm.model_id = m.id
            WHERE cm.id = ?
🔍 Parameters: [ 27 ]
Database query error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
❌ Database retrieve error: Error: Unknown column 'cm.pose_classification' in 'field list'
    at PromisePool.execute (/Users/programmer/Projects/musenest/node_modules/mysql2/lib/promise/pool.js:54:22)
    at Object.query (/Users/programmer/Projects/musenest/config/database.js:35:35)
    at /Users/programmer/Projects/musenest/routes/api/test.js:102:33
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/programmer/Projects/musenest/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/programmer/Projects/musenest/node_modules/express/lib/router/layer.js:95:5)
    at /Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:346:12)
    at next (/Users/programmer/Projects/musenest/node_modules/express/lib/router/index.js:280:10) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sql: '\n' +
    '            SELECT \n' +
    '                cm.id, cm.image_path, cm.original_path, cm.nudity_score,\n' +
    '                cm.detected_parts, cm.part_locations, cm.pose_classification,\n' +
    '                cm.explicit_pose_score, cm.final_risk_score, cm.risk_level,\n' +
    '                cm.combined_assessment, cm.pose_category, cm.pose_analysis, cm.moderation_status,\n' +
    '                cm.human_review_required, cm.flagged, cm.final_location,\n' +
    '                cm.created_at, m.name as model_name\n' +
    '            FROM content_moderation cm\n' +
    '            LEFT JOIN models m ON cm.model_id = m.id\n' +
    '            WHERE cm.id = ?\n' +
    '        ',
  sqlState: '42S22',
  sqlMessage: "Unknown column 'cm.pose_classification' in 'field list'"
}
