<div class="row">
  <div class="col-lg-4">
    <div class="crm-card mb-3">
      <div class="card-header bg-transparent border-0 d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="fas fa-comments me-2"></i>Threads</h5>
        <div class="d-flex gap-2">
          <select id="threadStatus" class="form-select form-select-sm">
            <option value="active">Active</option>
            <option value="archived">Archived</option>
            <option value="all">All</option>
          </select>
          <select id="tagPreset" class="form-select form-select-sm">
            <option value="">All Tags</option>
            <option value="screening">screening</option>
            <option value="appointment">appointment</option>
            <option value="sexting">sexting</option>
          </select>
          <input id="threadSearch" class="form-control form-select-sm" placeholder="Search in threads">
        </div>
      </div>
      <div class="card-body p-0">
        <ul class="list-group list-group-flush" id="threadsList"></ul>
      </div>
    </div>
  </div>
  <div class="col-lg-8">
    <div class="crm-card">
      <div class="card-header bg-transparent border-0">
        <div class="d-flex justify-content-between align-items-center">
          <h5 class="mb-0" id="threadTitle">Conversation</h5>
          <div class="d-flex gap-2 align-items-center">
            <div id="tagChips" class="d-flex gap-1 flex-wrap"></div>
            <input id="tagInput" class="form-control form-control-sm" placeholder="Add tag..." style="width: 150px;">
            <button class="btn btn-outline-secondary btn-sm" id="archiveBtn" title="Archive"><i class="fas fa-box-archive"></i></button>
          </div>
        </div>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <label class="form-label">Private Notes (per client)</label>
          <textarea id="clientNotes" class="form-control" rows="2" placeholder="Preferences, warnings, etc."></textarea>
          <div class="mt-2 d-flex justify-content-end"><button class="btn btn-sm btn-outline-primary" id="saveNotesBtn">Save Notes</button></div>
        </div>
        <div id="threadView" class="border rounded p-3 bg-light" style="height: 50vh; overflow:auto;"></div>
        <div class="mt-3 d-flex gap-2">
          <textarea id="threadComposer" class="form-control" rows="2" placeholder="Type a message..."></textarea>
          <button class="btn btn-crm-primary" id="sendThreadMessage"><i class="fas fa-paper-plane"></i></button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
(async function(){
  const interactionId = {{interactionId}};
  const slug = '{{model.modelSlug}}';
  let currentConversation = null;

  async function loadThreads(){
    const status = $('#threadStatus').val();
    const tag = ($('#tagPreset').val()||'').trim();
    const q = ($('#threadSearch').val()||'').trim();
    const params = new URLSearchParams({ status });
    if(tag) params.append('tag', tag);
    if(q) params.append('q', q);
    const res = await fetch(`/api/crm/${slug}/clients/${interactionId}/threads?`+params.toString());
    const data = await res.json();
    if(!data.success){ $('#threadsList').html('<li class="list-group-item">Failed to load</li>'); return; }
    const $ul = $('#threadsList').empty();
    (data.data||[]).forEach(t => {
      const unread = t.unread_count ? `<span class=\"badge bg-danger ms-2\">${t.unread_count}</span>`: '';
      const archived = t.is_archived ? '<span class=\"badge bg-secondary ms-2\">archived</span>' : '';
      const li = $(`<li class=\"list-group-item d-flex justify-content-between align-items-center\" style=\"cursor:pointer\">`+
                   `<div><div class=\"fw-semibold\">${t.subject || 'Conversation ' + t.conversation_id}</div>`+
                   `<small class=\"text-muted\">Last activity: ${new Date(t.last_activity).toLocaleString()}</small>${unread}${archived}</div>`+
                   `<i class=\"fas fa-chevron-right text-muted\"></i></li>`);
      li.on('click', ()=> openThread(t.conversation_id, t.subject));
      $ul.append(li);
    });
  }

  async function openThread(conversationId, subject){
    currentConversation = conversationId;
    $('#threadTitle').text(subject || 'Conversation');
    // mark as read
    fetch(`/api/crm/${slug}/threads/${conversationId}/read`, {method:'POST'});
    // load messages (reuse messaging API we added)
    const res = await fetch(`/api/crm/${slug}/messages/${interactionId}`);
    const data = await res.json();
    const $view = $('#threadView').empty();
    (data.data||[]).filter(m=>m.conversation_id===conversationId).forEach(m => {
      const who = m.sender_name || (m.message_type === 'internal_note' ? 'Model' : 'Contact');
      $view.append(`<div class=\"mb-2\"><div class=\"small text-muted\">${who} â€¢ ${new Date(m.created_at).toLocaleString()}</div><div class=\"p-2 bg-white border rounded\">${(m.message||'').replace(/</g,'&lt;')}</div></div>`);
    });
    // load files for thumbnails
    try {
      const filesRes = await fetch(`/api/crm/${slug}/threads/${conversationId}/files`);
      const files = await filesRes.json();
      if(files.success && files.files && files.files.length){
        $view.append('<hr><div class=\"small text-muted mb-2\">Attachments</div>');
        files.files.forEach(f=>{
          const link = `<a target=\"_blank\" href=\"${f.url||f.file_path}\">${f.name||f.original_name||'file'}</a>`;
          $view.append(`<div>${link}</div>`);
        });
      }
    } catch(_){}
  }

  function renderTags(tags){
    const $wrap = $('#tagChips').empty();
    (tags||[]).forEach(t=>{
      const chip = $(`<span class=\"badge rounded-pill text-bg-secondary\">${t} <i class=\"fas fa-times ms-1\" style=\"cursor:pointer\"></i></span>`);
      chip.find('i').on('click', async ()=>{
        await fetch(`/api/crm/${slug}/threads/${currentConversation}/tag`, {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ remove:[t] })});
        await refreshTags();
      });
      $wrap.append(chip);
    });
  }

  async function refreshTags(){
    if(!currentConversation) return;
    const res = await fetch(`/api/crm/${slug}/clients/${interactionId}/threads?status=all`);
    const data = await res.json();
    const t = (data.data||[]).find(x=>x.conversation_id===currentConversation);
    renderTags((t && JSON.parse(t.tags||'[]')) || []);
  }

  $('#tagInput').on('keypress', async function(e){
    if(e.which===13){
      const val = $(this).val().trim();
      if(!val || !currentConversation) return;
      await fetch(`/api/crm/${slug}/threads/${currentConversation}/tag`, {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ add:[val] })});
      $(this).val('');
      await refreshTags();
    }
  });

  // Notes save
  $('#saveNotesBtn').on('click', async function(){
    const notes = $('#clientNotes').val();
    await fetch(`/api/crm/${slug}/clients/${interactionId}/notes`, {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ notes })});
  });

  $('#threadStatus').on('change', loadThreads);
  $('#tagPreset').on('change', loadThreads);
  $('#threadSearch').on('keypress', function(e){ if(e.which===13) loadThreads(); });
  $('#archiveBtn').on('click', async function(){
    if(!currentConversation) return;
    await fetch(`/api/crm/${slug}/threads/${currentConversation}/archive`, {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ archived: true })});
    await loadThreads();
  });
  $('#sendThreadMessage').on('click', async function(){
    const text = $('#threadComposer').val().trim();
    if(!text || !currentConversation) return;
    // send through messages API bound to interaction; server will map to latest conversation
    await fetch(`/api/crm/${slug}/messages/${interactionId}`, {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ text })});
    $('#threadComposer').val('');
    await openThread(currentConversation);
  });

  await loadThreads();
})();
</script>

