<!-- Phase 2.3e: Modern Template Gallery Page - Contemporary Visual Showcase -->

<!-- Modern Gallery Hero Section -->
{{#if gallery_content.gallery_header_visible}}
<section class="modern-gallery-hero min-h-96 flex items-center justify-center text-white pt-20 relative overflow-hidden" data-aos="fade-in">
    <!-- Modern Background Elements -->
    <div class="modern-gallery-gradient-layer-1"></div>
    <div class="modern-gallery-gradient-layer-2"></div>
    
    <!-- Modern Floating Gallery Elements -->
    <div class="modern-gallery-floating-elements">
        <div class="modern-floating-camera-1"></div>
        <div class="modern-floating-image-1"></div>
        <div class="modern-floating-frame-1"></div>
        <div class="modern-floating-gallery-1"></div>
        <div class="modern-floating-picture-1"></div>
        <div class="modern-floating-lens-1"></div>
    </div>
    
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10">
        <div class="modern-gallery-hero-content" data-aos="zoom-in" data-aos-delay="200">
            <div class="modern-gallery-badge mb-6">Visual Showcase</div>
            <h1 class="text-5xl md:text-7xl font-bold mb-8 modern-gradient-text modern-text-glow">
                {{#if gallery_content.page_title}}{{gallery_content.page_title}}{{else}}Gallery{{/if}}
            </h1>
            {{#if gallery_content.page_subtitle}}
            <p class="text-xl md:text-2xl opacity-90 max-w-3xl mx-auto modern-subtitle">
                {{gallery_content.page_subtitle}}
            </p>
            {{/if}}
            {{#if gallery_content.page_description}}
            <p class="text-lg md:text-xl opacity-80 max-w-2xl mx-auto mt-4 modern-description">
                {{gallery_content.page_description}}
            </p>
            {{/if}}
        </div>
    </div>
</section>
{{/if}}

<!-- Modern Gallery Main Section -->
<section class="py-20 modern-gallery-main-section">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {{#if (hasGalleries modelSlug)}}
            <!-- Gallery Settings Configuration -->
            {{#if gallery_content.show_categories}}
            <div class="modern-gallery-categories mb-8" data-aos="fade-up">
                <div class="text-center mb-6">
                    <h3 class="text-2xl font-bold modern-gradient-text">Browse Collections</h3>
                </div>
            </div>
            {{/if}}
            
            {{#if gallery_content.show_search}}
            <div class="modern-gallery-search mb-8" data-aos="fade-up" data-aos-delay="100">
                <div class="max-w-md mx-auto">
                    <div class="relative">
                        <input type="text" placeholder="Search images..." 
                               class="w-full px-4 py-3 pl-12 pr-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                        <i class="fas fa-search absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                    </div>
                </div>
            </div>
            {{/if}}
            
            {{#if gallery_content.show_sort_options}}
            <div class="modern-gallery-sort mb-8" data-aos="fade-up" data-aos-delay="200">
                <div class="flex justify-center">
                    <div class="modern-sort-buttons">
                        <button class="modern-sort-btn active" data-sort="newest">Newest</button>
                        <button class="modern-sort-btn" data-sort="oldest">Oldest</button>
                        <button class="modern-sort-btn" data-sort="popular">Popular</button>
                    </div>
                </div>
            </div>
            {{/if}}
            
            <!-- Professional Modern Gallery Collections -->
            <div class="modern-gallery-collections" 
                 data-aos="fade-up" 
                 data-layout="{{#if gallery_content.default_layout}}{{gallery_content.default_layout}}{{else}}masonry{{/if}}"
                 data-lightbox="{{#if gallery_content.enable_lightbox}}{{gallery_content.enable_lightbox}}{{else}}true{{/if}}"
                 data-fullscreen="{{#if gallery_content.enable_fullscreen}}{{gallery_content.enable_fullscreen}}{{else}}true{{/if}}"
                 data-captions="{{#if gallery_content.show_captions}}{{gallery_content.show_captions}}{{else}}true{{/if}}"
                 data-per-page="{{#if gallery_content.images_per_page}}{{gallery_content.images_per_page}}{{else}}20{{/if}}">
                {{{renderGalleries modelSlug}}}
            </div>
        {{else}}
            <!-- Modern Empty State -->
            <div class="text-center py-16">
                <div class="modern-gallery-empty-state max-w-md mx-auto" data-aos="zoom-in">
                    <div class="modern-empty-gradient-background"></div>
                    <div class="modern-empty-content">
                        <div class="modern-empty-icon-container">
                            <div class="modern-empty-icon">
                                <i class="fas fa-camera"></i>
                            </div>
                            <div class="modern-empty-pulse-ring"></div>
                        </div>
                        <h3 class="text-2xl font-bold mb-4 modern-gradient-text">Gallery Coming Soon</h3>
                        <p class="text-gray-600 mb-8 max-w-md mx-auto leading-relaxed">
                            Professional photography will be available here soon. Each image will showcase contemporary elegance and artistic vision.
                        </p>
                        <div class="modern-empty-buttons">
                            <a href="/{{modelSlug}}/contact{{previewParam}}" class="modern-btn-primary">
                                <i class="fas fa-envelope mr-3"></i>
                                Get in Touch
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        {{/if}}
    </div>
</section>

<!-- Modern Gallery CTA Section -->
<section class="py-16 modern-gallery-cta-section">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center" data-aos="fade-up">
        <div class="modern-cta-gallery-card">
            <div class="modern-cta-gallery-background-gradient"></div>
            <div class="modern-cta-gallery-content">
                <div class="modern-cta-gallery-badge">Inspired by What You See?</div>
                <h2 class="text-3xl font-bold mb-6 text-white">
                    {{#if gallery_content.cta_title}}{{gallery_content.cta_title}}{{else}}Ready to Create Beautiful Memories?{{/if}}
                </h2>
                <p class="text-xl mb-8 text-white opacity-90 max-w-2xl mx-auto">
                    {{#if gallery_content.cta_description}}{{gallery_content.cta_description}}{{else}}Let's capture some amazing moments together. I believe in creating experiences that are as beautiful as they are memorable.{{/if}}
                </p>
                <div class="flex flex-col sm:flex-row justify-center gap-4">
                    <a href="/{{modelSlug}}/contact{{previewParam}}" class="modern-cta-btn-gallery bg-white text-blue-600 hover:bg-gray-100">
                        <i class="fas fa-camera mr-3"></i>
                        Book a Session
                    </a>
                    <a href="/{{modelSlug}}/about{{previewParam}}" class="modern-cta-btn-gallery-outline border-white text-white hover:bg-white hover:text-blue-600">
                        <i class="fas fa-user mr-3"></i>
                        Learn More About Me
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modern Gallery Page Styling -->
<style>
/* Modern Gallery Hero Section */
.modern-gallery-hero {
    background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
    position: relative;
    overflow: hidden;
}

.modern-gallery-gradient-layer-1 {
    position: absolute;
    top: -50%;
    left: -30%;
    width: 160%;
    height: 200%;
    background: radial-gradient(circle, rgba(99, 102, 241, 0.12) 0%, transparent 50%);
    animation: modern-rotate 25s linear infinite;
}

.modern-gallery-gradient-layer-2 {
    position: absolute;
    bottom: -50%;
    right: -30%;
    width: 160%;
    height: 200%;
    background: radial-gradient(circle, rgba(6, 182, 212, 0.1) 0%, transparent 50%);
    animation: modern-rotate 20s linear infinite reverse;
}

/* Modern Gallery Floating Elements */
.modern-gallery-floating-elements {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.modern-floating-camera-1 {
    position: absolute;
    top: 20%;
    left: 10%;
    width: 30px;
    height: 30px;
    animation: modern-float-slow 8s ease-in-out infinite;
}

.modern-floating-camera-1::before {
    content: 'üì∑';
    font-size: 24px;
    filter: sepia(0.3) hue-rotate(200deg) brightness(1.2);
}

.modern-floating-image-1 {
    position: absolute;
    top: 35%;
    right: 15%;
    width: 28px;
    height: 28px;
    animation: modern-float-slow 9s ease-in-out infinite;
}

.modern-floating-image-1::before {
    content: 'üñºÔ∏è';
    font-size: 22px;
    filter: sepia(0.1) hue-rotate(240deg) brightness(1.3);
}

.modern-floating-frame-1 {
    position: absolute;
    top: 60%;
    right: 25%;
    width: 26px;
    height: 26px;
    animation: modern-float-slow 7s ease-in-out infinite;
}

.modern-floating-frame-1::before {
    content: 'üñ®Ô∏è';
    font-size: 20px;
    filter: sepia(0.2) hue-rotate(180deg) brightness(1.2);
}

.modern-floating-gallery-1 {
    position: absolute;
    top: 45%;
    left: 20%;
    width: 22px;
    height: 22px;
    animation: modern-float-slow 6s ease-in-out infinite;
}

.modern-floating-gallery-1::before {
    content: 'üé®';
    font-size: 18px;
    filter: sepia(0.3) hue-rotate(160deg) brightness(1.1);
}

.modern-floating-picture-1 {
    position: absolute;
    bottom: 40%;
    right: 10%;
    width: 24px;
    height: 24px;
    animation: modern-float-slow 11s ease-in-out infinite;
}

.modern-floating-picture-1::before {
    content: 'üåü';
    font-size: 20px;
    filter: sepia(0.2) hue-rotate(260deg) brightness(1.2);
}

.modern-floating-lens-1 {
    position: absolute;
    bottom: 30%;
    left: 25%;
    width: 25px;
    height: 25px;
    animation: modern-float-slow 10s ease-in-out infinite reverse;
}

.modern-floating-lens-1::before {
    content: 'üí´';
    font-size: 20px;
    filter: sepia(0.2) hue-rotate(220deg) brightness(1.1);
}

/* Modern Gallery Badge */
.modern-gallery-badge {
    display: inline-block;
    background: rgba(99, 102, 241, 0.15);
    color: rgba(255, 255, 255, 0.9);
    padding: 0.5rem 1.5rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border: 1px solid rgba(99, 102, 241, 0.3);
    backdrop-filter: blur(10px);
}

/* Modern Gallery Main Section */
.modern-gallery-main-section {
    background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%);
}

/* Modern Gallery Collections Enhanced Styling */
.modern-gallery-collections .gallery-section {
    margin-bottom: 4rem;
    padding: 3rem 0;
    border-bottom: 1px solid rgba(99, 102, 241, 0.1);
    position: relative;
}

.modern-gallery-collections .gallery-section:last-child {
    border-bottom: none;
}

.modern-gallery-collections .gallery-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 3px;
    background: var(--modern-gradient-1);
    border-radius: 2px;
}

.modern-gallery-collections .gallery-title {
    font-size: 2.5rem;
    font-weight: 700;
    background: var(--modern-gradient-1);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 2rem;
    text-align: center;
    position: relative;
}

.modern-gallery-collections .gallery-title::after {
    content: '';
    position: absolute;
    bottom: -1rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background: var(--modern-gradient-2);
    border-radius: 1px;
}

/* Enhanced Gallery Items */
.modern-gallery-collections .grid-container {
    max-width: 100%;
    padding: 2rem 0;
}

.modern-gallery-collections .grid-item {
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.4s ease;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    position: relative;
    background: white;
}

.modern-gallery-collections .grid-item::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    background: var(--modern-gradient-1);
    border-radius: 19px;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.4s ease;
}

.modern-gallery-collections .grid-item:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 50px rgba(99, 102, 241, 0.2);
}

.modern-gallery-collections .grid-item:hover::before {
    opacity: 1;
}

.modern-gallery-collections .grid-item img {
    transition: all 0.4s ease;
}

.modern-gallery-collections .grid-item:hover img {
    transform: scale(1.05);
}

/* Modern Empty State */
.modern-gallery-empty-state {
    position: relative;
    border-radius: 24px;
    overflow: hidden;
    min-height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.modern-empty-gradient-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(248, 250, 252, 0.9), rgba(241, 245, 249, 0.9));
    backdrop-filter: blur(10px);
    border: 1px solid rgba(99, 102, 241, 0.1);
}

.modern-empty-gradient-background::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(99, 102, 241, 0.05) 0%, transparent 70%);
    animation: modern-rotate 30s linear infinite;
}

.modern-empty-content {
    position: relative;
    z-index: 2;
    padding: 3rem;
    text-align: center;
}

.modern-empty-icon-container {
    position: relative;
    display: inline-block;
    margin-bottom: 2rem;
}

.modern-empty-icon {
    width: 100px;
    height: 100px;
    background: var(--modern-gradient-1);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    box-shadow: 0 15px 35px rgba(99, 102, 241, 0.3);
    position: relative;
    z-index: 2;
}

.modern-empty-pulse-ring {
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    border: 3px solid rgba(99, 102, 241, 0.3);
    border-radius: 50%;
    animation: modern-pulse-ring 2s ease-out infinite;
}

@keyframes modern-pulse-ring {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(1.3);
        opacity: 0;
    }
}

.modern-btn-primary {
    background: var(--modern-gradient-1);
    color: white;
    padding: 1rem 2rem;
    border-radius: 12px;
    font-weight: 600;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 8px 20px rgba(99, 102, 241, 0.3);
}

.modern-btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 30px rgba(99, 102, 241, 0.4);
    color: white;
}

/* Modern Gallery CTA Section */
.modern-gallery-cta-section {
    background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
}

.modern-cta-gallery-card {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
}

.modern-cta-gallery-background-gradient {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--modern-gradient-1);
}

.modern-cta-gallery-background-gradient::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
    animation: modern-rotate 20s linear infinite;
}

.modern-cta-gallery-content {
    position: relative;
    z-index: 2;
    padding: 3rem;
}

.modern-cta-gallery-badge {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 1rem;
    display: inline-block;
    backdrop-filter: blur(10px);
}

.modern-cta-btn-gallery {
    padding: 1rem 2rem;
    border-radius: 12px;
    font-weight: 600;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2);
}

.modern-cta-btn-gallery:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(255, 255, 255, 0.3);
}

.modern-cta-btn-gallery-outline {
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: rgba(255, 255, 255, 0.1);
    padding: 1rem 2rem;
    border-radius: 12px;
    font-weight: 600;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
}

.modern-cta-btn-gallery-outline:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.8);
    transform: translateY(-2px);
}

/* Modern Gallery Search, Categories, and Sort Styling */
.modern-gallery-categories h3 {
    position: relative;
    display: inline-block;
}

.modern-gallery-categories h3::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: var(--modern-gradient-1);
    border-radius: 2px;
}

.modern-gallery-search input {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 2px solid rgba(99, 102, 241, 0.1);
    transition: all 0.3s ease;
}

.modern-gallery-search input:focus {
    background: white;
    border-color: rgba(99, 102, 241, 0.3);
    box-shadow: 0 8px 25px rgba(99, 102, 241, 0.15);
}

.modern-sort-buttons {
    display: flex;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 4px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(99, 102, 241, 0.2);
}

.modern-sort-btn {
    padding: 0.75rem 1.5rem;
    border: none;
    background: transparent;
    color: #64748b;
    font-weight: 600;
    border-radius: 8px;
    transition: all 0.3s ease;
    cursor: pointer;
    font-size: 0.875rem;
}

.modern-sort-btn:hover {
    color: #334155;
    background: rgba(99, 102, 241, 0.1);
}

.modern-sort-btn.active {
    background: var(--modern-gradient-1);
    color: white;
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.modern-description {
    font-style: italic;
    font-weight: 300;
}

/* Modern Carousel Layout */
.carousel-container {
    position: relative;
    overflow: hidden;
    padding: 2rem;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 20px;
    margin: 2rem 0;
    box-shadow: 0 20px 40px rgba(99, 102, 241, 0.15);
    backdrop-filter: blur(10px);
    /* Show 2 items at desktop, 1.5 at tablet, 1 at mobile */
    max-width: calc(300px * 2 + 24px + 4rem); /* 2 items + gap + padding */
    margin-left: auto;
    margin-right: auto;
}

.carousel-track {
    display: flex;
    gap: 1.5rem;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    justify-content: flex-start;
    will-change: transform;
}

.carousel-item {
    flex: 0 0 300px;
    max-width: 300px;
    min-width: 300px;
}

.carousel-item .gallery-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
    object-position: center;
    border-radius: 12px;
    transition: all 0.3s ease;
}

.carousel-item:hover .gallery-image {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(99, 102, 241, 0.3);
}

.carousel-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(99, 102, 241, 0.9);
    color: white;
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 10;
    box-shadow: 0 4px 15px rgba(99, 102, 241, 0.3);
}

.carousel-nav:hover {
    background: rgba(99, 102, 241, 1);
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 8px 25px rgba(99, 102, 241, 0.4);
}

.carousel-nav.prev {
    left: 1rem;
}

.carousel-nav.next {
    right: 1rem;
}

.carousel-nav:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: translateY(-50%) scale(1);
}

.carousel-dots {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 1.5rem;
}

.carousel-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: rgba(99, 102, 241, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
}

.carousel-dot.active {
    background: #6366f1;
    transform: scale(1.2);
}

.carousel-dot:hover {
    background: rgba(99, 102, 241, 0.6);
}

/* Responsive Design */
@media (max-width: 768px) {
    .modern-gallery-floating-elements > * {
        display: none;
    }
    
    .modern-gallery-hero h1 {
        font-size: 2.5rem !important;
    }
    
    .modern-gallery-collections .grid-container {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
    }
    
    .modern-empty-content {
        padding: 2rem 1.5rem;
    }
    
    .modern-empty-icon {
        width: 80px;
        height: 80px;
        font-size: 2.5rem;
    }
    
    .modern-cta-gallery-content {
        padding: 2rem;
    }
}

@media (max-width: 480px) {
    .modern-gallery-hero h1 {
        font-size: 2rem !important;
    }
    
    .modern-gallery-collections .grid-container {
        grid-template-columns: 1fr;
        gap: 1rem;
    }
    
    .modern-empty-content {
        padding: 1.5rem 1rem;
    }
    
    .modern-empty-icon {
        width: 70px;
        height: 70px;
        font-size: 2rem;
    }
    
    .modern-gallery-collections .gallery-title {
        font-size: 2rem;
    }
    
    .carousel-item {
        flex: 0 0 250px;
    }
    
    .carousel-nav {
        width: 45px;
        height: 45px;
    }
}

/* Carousel responsive design */
@media (max-width: 1024px) {
    .carousel-container {
        /* Show 1.5 items on tablet */
        max-width: calc(300px * 1.5 + 12px + 4rem);
    }
}

@media (max-width: 768px) {
    .carousel-container {
        /* Show 1 item on mobile with some padding */
        max-width: calc(280px + 4rem);
        padding: 1.5rem;
    }
    
    .carousel-item {
        flex: 0 0 280px;
        max-width: 280px;
        min-width: 280px;
    }
    
    .carousel-nav {
        width: 40px;
        height: 40px;
    }
}

@media (max-width: 480px) {
    .carousel-container {
        max-width: calc(250px + 3rem);
        padding: 1.5rem;
    }
    
    .carousel-item {
        flex: 0 0 250px;
        max-width: 250px;
        min-width: 250px;
    }
}
</style>

<!-- Modern Gallery Lightbox Modal -->
<div id="modern-gallery-lightbox-modal" class="fixed inset-0 bg-black bg-opacity-95 z-50 hidden flex items-center justify-center p-4">
    <div class="relative max-w-6xl max-h-full">
        <!-- Modern Close Button -->
        <button onclick="closeModernGalleryLightbox()" 
                class="absolute -top-12 right-0 modern-btn-close-gallery">
            <i class="fas fa-times text-xl"></i>
        </button>
        
        <!-- Image Container -->
        <div class="relative">
            <img id="modern-gallery-lightbox-image" 
                 src="" 
                 alt="" 
                 class="max-w-full max-h-full object-contain rounded-lg shadow-2xl">
        </div>
        
        <!-- Modern Caption -->
        <div class="absolute bottom-4 left-4 right-4 modern-gallery-caption">
            <p id="modern-gallery-lightbox-caption" class="text-center modern-caption-text"></p>
        </div>
    </div>
</div>

<!-- Modern Gallery JavaScript -->
<script>
function openModernGalleryLightbox(imageUrl, caption) {
    const modal = document.getElementById('modern-gallery-lightbox-modal');
    const image = document.getElementById('modern-gallery-lightbox-image');
    const captionEl = document.getElementById('modern-gallery-lightbox-caption');
    
    if (modal && image && captionEl) {
        image.src = imageUrl;
        image.alt = caption;
        captionEl.textContent = caption;
        
        modal.classList.remove('hidden');
        modal.classList.add('flex');
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
        
        // Close on escape key
        document.addEventListener('keydown', handleModernGalleryEscape);
        
        // Close on background click
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeModernGalleryLightbox();
            }
        });
    }
}

function closeModernGalleryLightbox() {
    const modal = document.getElementById('modern-gallery-lightbox-modal');
    
    if (modal) {
        modal.classList.add('hidden');
        modal.classList.remove('flex');
        
        // Restore body scroll
        document.body.style.overflow = '';
        
        // Remove event listeners
        document.removeEventListener('keydown', handleModernGalleryEscape);
    }
}

function handleModernGalleryEscape(e) {
    if (e.key === 'Escape') {
        closeModernGalleryLightbox();
    }
}

// Modern Gallery Carousel Functions
function moveCarousel(sectionIndex, direction) {
    const carousel = document.getElementById(`carousel-${sectionIndex}`);
    if (!carousel) return;
    
    const items = carousel.querySelectorAll('.carousel-item');
    const currentIndex = parseInt(carousel.dataset.currentIndex || 0);
    const totalItems = items.length;
    
    // Calculate how many items are visible at once
    const visibleItems = getVisibleItemsCount();
    
    let newIndex = currentIndex + direction;
    
    // Handle boundaries for multi-item view
    const maxIndex = Math.max(0, totalItems - visibleItems);
    if (newIndex < 0) newIndex = 0;
    if (newIndex > maxIndex) newIndex = maxIndex;
    
    // Update carousel position - account for item width and gaps
    const itemWidth = getItemWidth();
    const itemGap = 24; // 1.5rem = 24px
    const totalItemWidth = itemWidth + itemGap;
    const translateX = -(newIndex * totalItemWidth);
    carousel.style.transform = `translateX(${translateX}px)`;
    carousel.dataset.currentIndex = newIndex;
    
    // Update dots
    updateCarouselDots(sectionIndex, newIndex);
    
    // Update navigation buttons
    updateCarouselNav(sectionIndex, newIndex, totalItems);
    
    // Restart autoplay if enabled
    const container = carousel.closest('.carousel-container');
    if (container) {
        const autoplaySpeed = container.dataset.autoplay;
        if (autoplaySpeed && parseInt(autoplaySpeed) > 0) {
            startCarouselAutoplay(sectionIndex, parseInt(autoplaySpeed));
        }
    }
}

// Helper function to get visible items count based on screen size
function getVisibleItemsCount() {
    if (window.innerWidth <= 480) return 1;
    if (window.innerWidth <= 768) return 1;
    if (window.innerWidth <= 1024) return 1.5; // Partial view
    return 2;
}

// Helper function to get item width based on screen size
function getItemWidth() {
    if (window.innerWidth <= 480) return 250;
    if (window.innerWidth <= 768) return 280;
    return 300;
}

function goToCarouselSlide(sectionIndex, slideIndex) {
    const carousel = document.getElementById(`carousel-${sectionIndex}`);
    if (!carousel) return;
    
    const items = carousel.querySelectorAll('.carousel-item');
    const totalItems = items.length;
    const visibleItems = getVisibleItemsCount();
    const maxIndex = Math.max(0, totalItems - Math.floor(visibleItems));
    
    if (slideIndex < 0 || slideIndex > maxIndex) return;
    
    // Update carousel position
    const itemWidth = getItemWidth();
    const itemGap = 24;
    const totalItemWidth = itemWidth + itemGap;
    const translateX = -(slideIndex * totalItemWidth);
    carousel.style.transform = `translateX(${translateX}px)`;
    carousel.dataset.currentIndex = slideIndex;
    
    // Update dots
    updateCarouselDots(sectionIndex, slideIndex);
    
    // Update navigation buttons
    updateCarouselNav(sectionIndex, slideIndex, totalItems);
    
    // Restart autoplay if enabled
    const container = carousel.closest('.carousel-container');
    if (container) {
        const autoplaySpeed = container.dataset.autoplay;
        if (autoplaySpeed && parseInt(autoplaySpeed) > 0) {
            startCarouselAutoplay(sectionIndex, parseInt(autoplaySpeed));
        }
    }
}

function updateCarouselDots(sectionIndex, activeIndex) {
    const carousel = document.querySelector(`#carousel-${sectionIndex}`);
    if (!carousel) return;
    
    const container = carousel.closest('.carousel-container');
    if (!container) return;
    
    const dots = container.querySelectorAll('.carousel-dot');
    dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === activeIndex);
    });
}

function updateCarouselNav(sectionIndex, currentIndex, totalItems) {
    const carousel = document.querySelector(`#carousel-${sectionIndex}`);
    if (!carousel) return;
    
    const container = carousel.closest('.carousel-container');
    if (!container) return;
    
    const prevBtn = container.querySelector('.carousel-nav.prev');
    const nextBtn = container.querySelector('.carousel-nav.next');
    
    const visibleItems = getVisibleItemsCount();
    const maxIndex = Math.max(0, totalItems - Math.floor(visibleItems));
    
    // Update button states based on position
    if (prevBtn) {
        prevBtn.disabled = currentIndex <= 0;
        prevBtn.style.opacity = currentIndex <= 0 ? '0.5' : '1';
    }
    if (nextBtn) {
        nextBtn.disabled = currentIndex >= maxIndex;
        nextBtn.style.opacity = currentIndex >= maxIndex ? '0.5' : '1';
    }
}

// Carousel autoplay timers
window.carouselTimers = {};

// Carousel autoplay functions
function startCarouselAutoplay(sectionIndex, speed) {
    // Clear any existing timer
    pauseCarouselAutoplay(sectionIndex);
    
    // Start new timer
    window.carouselTimers[sectionIndex] = setInterval(() => {
        moveCarousel(sectionIndex, 1); // Move to next slide
    }, speed);
}

function pauseCarouselAutoplay(sectionIndex) {
    if (window.carouselTimers[sectionIndex]) {
        clearInterval(window.carouselTimers[sectionIndex]);
        delete window.carouselTimers[sectionIndex];
    }
}

// Modern Gallery Search and Sort Functionality
document.addEventListener('DOMContentLoaded', function() {
    // Initialize all carousels
    const carousels = document.querySelectorAll('.carousel-track');
    
    carousels.forEach((carousel, index) => {
        carousel.dataset.currentIndex = '0';
        
        // Initialize at position 0
        carousel.style.transform = 'translateX(0px)';
        
        // Check if autoplay is enabled for this carousel
        const container = carousel.closest('.carousel-container');
        if (container) {
            const autoplaySpeed = container.dataset.autoplay;
            if (autoplaySpeed && parseInt(autoplaySpeed) > 0) {
                startCarouselAutoplay(index, parseInt(autoplaySpeed));
            }
        }
    });
    
    // Pause autoplay on hover
    document.querySelectorAll('.carousel-container').forEach((container, index) => {
        container.addEventListener('mouseenter', () => {
            pauseCarouselAutoplay(index);
            // Add modern glow effect on hover
            container.style.boxShadow = '0 25px 50px rgba(99, 102, 241, 0.25)';
        });
        container.addEventListener('mouseleave', () => {
            const autoplaySpeed = container.dataset.autoplay;
            if (autoplaySpeed && parseInt(autoplaySpeed) > 0) {
                startCarouselAutoplay(index, parseInt(autoplaySpeed));
            }
            // Remove glow effect
            container.style.boxShadow = '';
        });
    });

    // Initialize search functionality
    const searchInput = document.querySelector('.modern-gallery-search input');
    if (searchInput) {
        searchInput.addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const galleryItems = document.querySelectorAll('.modern-gallery-collections .gallery-item');
            
            galleryItems.forEach(item => {
                const caption = item.querySelector('.image-caption');
                const alt = item.querySelector('img')?.alt || '';
                const searchText = (caption?.textContent || '' + ' ' + alt).toLowerCase();
                
                if (searchText.includes(searchTerm)) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        });
    }
    
    // Initialize sort functionality
    const sortButtons = document.querySelectorAll('.modern-sort-btn');
    sortButtons.forEach(button => {
        button.addEventListener('click', function() {
            // Remove active class from all buttons
            sortButtons.forEach(btn => btn.classList.remove('active'));
            // Add active class to clicked button
            this.classList.add('active');
            
            const sortType = this.dataset.sort;
            const galleryItems = Array.from(document.querySelectorAll('.modern-gallery-collections .gallery-item'));
            const container = document.querySelector('.modern-gallery-collections .grid-container, .modern-gallery-collections .masonry-grid');
            
            if (container) {
                // Sort items based on type (placeholder implementation)
                galleryItems.sort((a, b) => {
                    if (sortType === 'newest') {
                        // Sort by newest (placeholder - would use actual timestamp)
                        return Math.random() - 0.5;
                    } else if (sortType === 'oldest') {
                        // Sort by oldest (placeholder - would use actual timestamp)  
                        return Math.random() - 0.5;
                    } else if (sortType === 'popular') {
                        // Sort by popularity (placeholder - would use view count)
                        return Math.random() - 0.5;
                    }
                    return 0;
                });
                
                // Re-append sorted items
                galleryItems.forEach(item => container.appendChild(item));
            }
        });
    });
});
</script>

<!-- Additional Modern Gallery Lightbox Styling -->
<style>
.modern-btn-close-gallery {
    background: rgba(255, 255, 255, 0.15);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
}

.modern-btn-close-gallery:hover {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.6);
    transform: scale(1.1);
    color: white;
}

.modern-gallery-caption {
    background: var(--modern-gradient-1);
    backdrop-filter: blur(10px);
    border-radius: 12px;
    padding: 1rem;
    box-shadow: 0 8px 20px rgba(99, 102, 241, 0.3);
}

.modern-caption-text {
    font-size: 0.875rem;
    font-weight: 600;
    color: white;
}
</style>