<!-- Calendar Page Header -->
<section class="relative py-32 overflow-hidden" style="background: var(--glamour-gradient); color: white;">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <div class="mb-8">
            <i class="fas fa-calendar-alt text-6xl mb-6 text-white/80"></i>
        </div>
        <h1 class="text-5xl md:text-6xl font-bold mb-6" style="font-family: var(--font-display);">
            {{#if calendar_content.page_title}}{{calendar_content.page_title}}{{else}}My Calendar{{/if}}
        </h1>
        <p class="text-xl text-white/90 max-w-3xl mx-auto">
            {{#if calendar_content.page_subtitle}}{{calendar_content.page_subtitle}}{{else}}View my current location and availability. Check where I'm traveling and when I'm available for appointments.{{/if}}
        </p>
    </div>
    <div class="absolute inset-0 opacity-10 pointer-events-none">
        <div class="absolute top-20 left-20 w-32 h-32 border border-white/20 rounded-full"></div>
        <div class="absolute bottom-32 right-16 w-24 h-24 border border-white/20 rounded-full"></div>
    </div>
</section>

<!-- View Toggle (Mobile Only) -->
<section class="md:hidden py-4" style="background-color: var(--theme-bg);">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="view-toggle flex justify-center">
            <div class="inline-flex rounded-lg border" style="border-color: var(--theme-border);">
                <button id="list-view-btn" class="px-6 py-2 rounded-l-lg font-medium transition-colors active" style="background-color: var(--theme-primary); color: white;">
                    <i class="fas fa-list mr-2"></i>List
                </button>
                <button id="month-view-btn" class="px-6 py-2 rounded-r-lg font-medium transition-colors" style="color: var(--theme-text);">
                    <i class="fas fa-calendar mr-2"></i>Month
                </button>
            </div>
        </div>
    </div>
</section>

<!-- Calendar Navigation -->
<section class="py-6" style="background-color: var(--theme-bg);">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="calendar-nav flex items-center justify-between glamour-card p-4">
            <button id="prev-month" class="flex items-center px-4 py-2 rounded-lg transition-colors" style="color: var(--theme-primary); border: 1px solid var(--theme-border);">
                <i class="fas fa-chevron-left mr-2"></i>Previous
            </button>
            <h2 id="month-title" class="text-2xl font-bold" style="color: var(--theme-text); font-family: var(--font-display);">
                Loading...
            </h2>
            <button id="next-month" class="flex items-center px-4 py-2 rounded-lg transition-colors" style="color: var(--theme-primary); border: 1px solid var(--theme-border);">
                Next<i class="fas fa-chevron-right ml-2"></i>
            </button>
        </div>
    </div>
</section>

<!-- Calendar Grid (Desktop) -->
<section class="py-8" style="background-color: var(--theme-bg);">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div id="calendar-container" class="glamour-card overflow-hidden">
            <!-- Calendar Header -->
            <div class="calendar-header grid grid-cols-7 border-b" style="background-color: var(--theme-bg-alt); border-color: var(--theme-border);">
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Sun</div>
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Mon</div>
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Tue</div>
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Wed</div>
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Thu</div>
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Fri</div>
                <div class="p-4 text-center font-semibold" style="color: var(--theme-text);">Sat</div>
            </div>
            <!-- Calendar Body (Generated by JavaScript) -->
            <div id="calendar-grid" class="min-h-96" style="background-color: var(--theme-surface);">
                <div class="loading-state text-center py-16">
                    <i class="fas fa-spinner fa-spin text-4xl mb-4" style="color: var(--theme-primary);"></i>
                    <p style="color: var(--theme-text-subtle);">Loading calendar...</p>
                </div>
            </div>
        </div>
        
        <!-- Status Legend -->
        <div class="mt-8 glamour-card p-6">
            <h3 class="text-lg font-semibold mb-4" style="color: var(--theme-text);">Calendar Legend</h3>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                <div class="flex items-center space-x-2">
                    <div class="w-4 h-4 rounded" style="background-color: #10B981;"></div>
                    <span class="text-sm" style="color: var(--theme-text-subtle);">Available</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div class="w-4 h-4 rounded" style="background-color: #F59E0B;"></div>
                    <span class="text-sm" style="color: var(--theme-text-subtle);">Travel</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div class="w-4 h-4 rounded" style="background-color: #8B5CF6;"></div>
                    <span class="text-sm" style="color: var(--theme-text-subtle);">Vacation</span>
                </div>
                <div class="flex items-center space-x-2">
                    <div class="w-4 h-4 rounded" style="background-color: #6B7280;"></div>
                    <span class="text-sm" style="color: var(--theme-text-subtle);">Unavailable</span>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- List View (Mobile) -->
<section id="list-view-container" class="md:hidden py-8 hidden" style="background-color: var(--theme-bg);">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div id="list-view-content" class="space-y-4">
            <div class="text-center py-8">
                <i class="fas fa-spinner fa-spin text-4xl mb-4" style="color: var(--theme-primary);"></i>
                <p style="color: var(--theme-text-subtle);">Loading events...</p>
            </div>
        </div>
    </div>
</section>

<!-- Contact CTA -->
<section class="py-16" style="background-color: var(--theme-bg-alt);">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <div class="glamour-card p-12">
            <div class="mb-8">
                <i class="fas fa-envelope text-6xl" style="color: var(--theme-primary);"></i>
            </div>
            <h2 class="text-3xl font-bold mb-6" style="color: var(--theme-text); font-family: var(--font-display);">
                Need to Schedule?
            </h2>
            <p class="text-lg mb-8" style="color: var(--theme-text-subtle);">
                Don't see your preferred date or time? Contact me directly to discuss availability and make special arrangements.
            </p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <a href="/{{modelSlug}}/contact{{previewParam}}" class="glamour-btn">
                    <i class="fas fa-envelope"></i>
                    Contact Me
                </a>
                <a href="/{{modelSlug}}/rates{{previewParam}}" class="glamour-btn-outline">
                    <i class="fas fa-info-circle"></i>
                    View Rates
                </a>
            </div>
        </div>
    </div>
</section>

<script>
class CalendarManager {
    constructor() {
        this.currentMonth = new Date().getMonth() + 1;
        this.currentYear = new Date().getFullYear();
        this.isMobile = window.innerWidth < 768;
        this.currentView = 'month';
        this.calendarData = null;
        
        this.initializeEventListeners();
        this.loadCalendarData();
    }
    
    initializeEventListeners() {
        // Navigation buttons
        document.getElementById('prev-month').addEventListener('click', () => this.navigateMonth(-1));
        document.getElementById('next-month').addEventListener('click', () => this.navigateMonth(1));
        
        // View toggle buttons (mobile)
        document.getElementById('list-view-btn')?.addEventListener('click', () => this.switchView('list'));
        document.getElementById('month-view-btn')?.addEventListener('click', () => this.switchView('month'));
        
        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowLeft') this.navigateMonth(-1);
            if (e.key === 'ArrowRight') this.navigateMonth(1);
        });
        
        // Responsive handling
        window.addEventListener('resize', () => {
            this.isMobile = window.innerWidth < 768;
            this.renderCalendar();
        });
    }
    
    async loadCalendarData() {
        try {
            const response = await fetch(`/api/model-calendar/{{modelSlug}}?year=${this.currentYear}&month=${this.currentMonth}`);
            const data = await response.json();
            
            if (data.success) {
                this.calendarData = data.data;
                this.updateMonthTitle();
                this.renderCalendar();
            } else {
                this.showError('Calendar data unavailable');
            }
        } catch (error) {
            console.error('Failed to load calendar:', error);
            this.showError('Failed to load calendar data');
        }
    }
    
    navigateMonth(direction) {
        this.currentMonth += direction;
        if (this.currentMonth > 12) {
            this.currentMonth = 1;
            this.currentYear++;
        } else if (this.currentMonth < 1) {
            this.currentMonth = 12;
            this.currentYear--;
        }
        this.loadCalendarData();
    }
    
    switchView(view) {
        this.currentView = view;
        
        // Update button states
        document.getElementById('list-view-btn').classList.toggle('active', view === 'list');
        document.getElementById('month-view-btn').classList.toggle('active', view === 'month');
        
        // Show/hide containers
        document.getElementById('calendar-container').style.display = view === 'month' ? 'block' : 'none';
        document.getElementById('list-view-container').style.display = view === 'list' ? 'block' : 'none';
        
        if (view === 'list') {
            this.renderListView();
        }
    }
    
    updateMonthTitle() {
        const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
                          'July', 'August', 'September', 'October', 'November', 'December'];
        document.getElementById('month-title').textContent = 
            `${monthNames[this.currentMonth - 1]} ${this.currentYear}`;
    }
    
    renderCalendar() {
        if (!this.calendarData?.calendar) return;
        
        const calendar = this.calendarData.calendar;
        const calendarGrid = document.getElementById('calendar-grid');
        
        let html = '<div class="calendar-weeks">';
        
        calendar.weeks.forEach(week => {
            html += '<div class="calendar-week grid grid-cols-7 border-b" style="border-color: var(--theme-border);">';
            
            week.days.forEach((day, dayIndex) => {
                const isToday = this.isToday(day);
                const hasEvents = week.spans?.some(span => 
                    span.start_pos <= dayIndex && (span.start_pos + span.width - 1) >= dayIndex
                );
                
                html += `<div class="calendar-day relative p-2 h-24 ${isToday ? 'today' : ''}" 
                              style="background-color: ${isToday ? 'var(--theme-overlay)' : 'var(--theme-surface)'};">`;
                
                if (day > 0) {
                    html += `<div class="day-number font-semibold text-sm" style="color: var(--theme-text);">${day}</div>`;
                    
                    // Render event spans
                    week.spans?.forEach(span => {
                        if (span.start_pos <= dayIndex && (span.start_pos + span.width - 1) >= dayIndex) {
                            const isSpanStart = span.start_pos === dayIndex;
                            html += this.renderEventSpan(span, isSpanStart);
                        }
                    });
                }
                
                html += '</div>';
            });
            
            html += '</div>';
        });
        
        html += '</div>';
        calendarGrid.innerHTML = html;
    }
    
    renderEventSpan(span, isStart) {
        const colors = {
            available: '#10B981',
            travel: '#F59E0B', 
            vacation: '#8B5CF6',
            unavailable: '#6B7280'
        };
        
        const color = span.color || colors[span.status] || colors.unavailable;
        
        return `<div class="event-span absolute bottom-1 left-1 right-1 px-1 py-1 text-xs font-medium rounded truncate"
                     style="background-color: ${color}; color: white;">
                    ${isStart ? span.location || span.status : ''}
                </div>`;
    }
    
    renderListView() {
        if (!this.calendarData?.events) {
            document.getElementById('list-view-content').innerHTML = 
                '<div class="text-center py-8"><p style="color: var(--theme-text-subtle);">No events to display</p></div>';
            return;
        }
        
        let html = '';
        this.calendarData.events.forEach(event => {
            const color = this.getStatusColor(event.status);
            html += `
                <div class="glamour-card p-4">
                    <div class="flex items-center space-x-4">
                        <div class="w-4 h-4 rounded" style="background-color: ${color};"></div>
                        <div class="flex-1">
                            <div class="font-semibold" style="color: var(--theme-text);">
                                ${event.location || event.status}
                            </div>
                            <div class="text-sm" style="color: var(--theme-text-subtle);">
                                ${this.formatDateRange(event.start_date, event.end_date)}
                            </div>
                        </div>
                        <div class="text-sm font-medium" style="color: var(--theme-primary);">
                            ${event.status}
                        </div>
                    </div>
                </div>
            `;
        });
        
        document.getElementById('list-view-content').innerHTML = html;
    }
    
    getStatusColor(status) {
        const colors = {
            available: '#10B981',
            travel: '#F59E0B',
            vacation: '#8B5CF6', 
            unavailable: '#6B7280'
        };
        return colors[status] || colors.unavailable;
    }
    
    formatDateRange(startDate, endDate) {
        const start = new Date(startDate);
        const end = new Date(endDate);
        const options = { month: 'short', day: 'numeric' };
        
        if (start.toDateString() === end.toDateString()) {
            return start.toLocaleDateString('en-US', options);
        } else {
            return `${start.toLocaleDateString('en-US', options)} - ${end.toLocaleDateString('en-US', options)}`;
        }
    }
    
    isToday(day) {
        const today = new Date();
        return day === today.getDate() && 
               this.currentMonth === today.getMonth() + 1 && 
               this.currentYear === today.getFullYear();
    }
    
    showError(message) {
        document.getElementById('calendar-grid').innerHTML = 
            `<div class="text-center py-16">
                <i class="fas fa-exclamation-triangle text-4xl mb-4" style="color: var(--theme-warning);"></i>
                <p style="color: var(--theme-text-subtle);">${message}</p>
                <button onclick="location.href='/{{modelSlug}}/contact{{previewParam}}'" class="glamour-btn mt-4">
                    <i class="fas fa-envelope"></i>
                    Contact Directly
                </button>
            </div>`;
    }
}

// Initialize calendar when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    new CalendarManager();
});
</script>

<style>
/* Calendar-specific styles */
.calendar-day.today {
    box-shadow: inset 0 0 0 2px var(--theme-primary);
}

.view-toggle button.active {
    background-color: var(--theme-primary) !important;
    color: white !important;
}

.event-span {
    font-size: 10px;
    line-height: 1;
}

.calendar-week:last-child {
    border-bottom: none;
}

.calendar-nav button:hover {
    background-color: var(--theme-overlay);
}

/* Mobile responsive adjustments */
@media (max-width: 768px) {
    .calendar-day {
        height: 60px !important;
        font-size: 12px;
    }
    
    .event-span {
        font-size: 8px;
        padding: 2px 4px;
    }
    
    #calendar-container {
        display: none;
    }
    
    #list-view-container {
        display: block !important;
    }
}

/* Loading animation */
@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.fa-spin {
    animation: spin 1s linear infinite;
}
</style>