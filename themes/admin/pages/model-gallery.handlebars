<div class="d-flex justify-content-between align-items-center mb-3">
  <h3 class="mb-0"><i class="fas fa-images me-2"></i>Gallery Manager — {{model.name}}</h3>
  <a class="btn btn-outline-secondary" href="/admin"><i class="fas fa-arrow-left me-2"></i>Back to Dashboard</a>
</div>

<div class="row g-3">
  <div class="col-12 col-lg-4">
    <div class="card">
      <div class="card-header bg-white"><strong>Create Section</strong></div>
      <div class="card-body">
        <div class="mb-2">
          <label class="form-label">Title</label>
          <input id="sec_title" class="form-control" placeholder="e.g., Portfolio" />
        </div>
        <div class="mb-2">
          <label class="form-label">Layout</label>
          <select id="sec_layout" class="form-select">
            <option value="grid">Grid</option>
            <option value="masonry">Masonry</option>
            <option value="carousel">Carousel</option>
            <option value="lightbox_grid">Lightbox Grid</option>
          </select>
        </div>
        <button id="btn_create_section" class="btn btn-primary w-100">Create Section</button>
      </div>
    </div>
  </div>
  <div class="col-12 col-lg-8">
    <div class="card">
      <div class="card-header bg-white d-flex align-items-center justify-content-between">
        <strong>Sections</strong>
        <input id="search_sections" class="form-control form-control-sm" placeholder="Search" style="max-width:200px" />
      </div>
      <div class="card-body" id="sections_list">
        <div class="text-muted">Loading…</div>
      </div>
    </div>
  </div>
</div>

<script>
  (function(){
    const slug = {{json model.slug}};
    const listEl = document.getElementById('sections_list');
    const searchEl = document.getElementById('search_sections');
    const createBtn = document.getElementById('btn_create_section');
    const titleEl = document.getElementById('sec_title');
    const layoutEl = document.getElementById('sec_layout');
    async function load(page=1){
      const q = searchEl.value ? `&search=${encodeURIComponent(searchEl.value)}` : '';
      const res = await fetch(`/api/model-gallery/${encodeURIComponent(slug)}/sections?page=${page}&limit=20${q}`);
      const data = await res.json();
      if(!data.success){ listEl.innerHTML = `<div class="text-danger">${data.message||'Failed to load'}</div>`; return; }
      const sections = data.data.sections || [];
      if(!sections.length){ listEl.innerHTML = '<div class="text-muted">No sections yet.</div>'; return; }
      listEl.innerHTML = sections.map(s => `
        <div class="border rounded p-2 mb-2">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <div class="fw-bold">${s.title}</div>
              <div class="text-muted small">${s.layout_type} · ${s.is_visible ? 'Visible' : 'Hidden'}</div>
            </div>
            <div>
              <button class="btn btn-sm btn-outline-secondary me-2 btn-rename" data-id="${s.id}">Rename</button>
              <button class="btn btn-sm btn-outline-warning me-2 btn-toggle" data-id="${s.id}" data-visible="${s.is_visible ? 1 : 0}">${s.is_visible ? 'Hide' : 'Show'}</button>
              <button class="btn btn-sm btn-outline-primary btn-manage" data-id="${s.id}">Manage Images</button>
            </div>
          </div>
          <div class="mt-2 section-images" id="section_${s.id}_images"></div>
        </div>
      `).join('');

      // Bind actions
      listEl.querySelectorAll('.btn-rename').forEach(btn => {
        btn.addEventListener('click', async () => {
          const id = btn.getAttribute('data-id');
          const currentTitle = btn.closest('.border').querySelector('.fw-bold').textContent.trim();
          const next = prompt('New title', currentTitle);
          if (!next || next === currentTitle) return;
          const res = await fetch(`/api/model-gallery/${encodeURIComponent(slug)}/sections/${id}`, {
            method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ title: next })
          });
          const data = await res.json();
          if (!data.success) { alert(data.message||'Failed to rename'); return; }
          await load();
        });
      });

      listEl.querySelectorAll('.btn-toggle').forEach(btn => {
        btn.addEventListener('click', async () => {
          const id = btn.getAttribute('data-id');
          const visible = btn.getAttribute('data-visible') === '1';
          const res = await fetch(`/api/model-gallery/${encodeURIComponent(slug)}/sections/${id}/visibility`, {
            method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ is_visible: !visible })
          });
          const data = await res.json();
          if (!data.success) { alert(data.message||'Failed to toggle'); return; }
          await load();
        });
      });

      listEl.querySelectorAll('.btn-manage').forEach(btn => {
        btn.addEventListener('click', async () => {
          const id = btn.getAttribute('data-id');
          const container = document.getElementById(`section_${id}_images`);
          container.innerHTML = '<div class="text-muted">Loading images…</div>';
          const res = await fetch(`/api/model-gallery/${encodeURIComponent(slug)}/sections/${id}/images`);
          const data = await res.json();
          if (!data.success) { container.innerHTML = `<div class="text-danger">${data.message||'Failed to load images'}</div>`; return; }
          const images = data.data.images || [];
          if (!images.length) { container.innerHTML = '<div class="text-muted">No images in this section.</div>'; return; }
          container.innerHTML = `
            <div class="row row-cols-2 row-cols-md-3 g-2">
              ${images.map(img => `
                <div class="col">
                  <div class="border rounded p-2">
                    <div class="small text-truncate" title="${img.filename}">${img.filename}</div>
                    <div class="text-muted small">${img.is_active ? 'Visible' : 'Hidden'}</div>
                  </div>
                </div>
              `).join('')}
            </div>
          `;
        });
      });
    }
    searchEl.addEventListener('input', () => load(1));
    createBtn.addEventListener('click', async () => {
      const title = titleEl.value.trim();
      const layout_type = layoutEl.value;
      if(!title){ alert('Please provide a title'); return; }
      const res = await fetch(`/api/model-gallery/${encodeURIComponent(slug)}/sections`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, layout_type })
      });
      const data = await res.json();
      if(!data.success){ alert(data.message||'Failed to create'); return; }
      titleEl.value='';
      await load(1);
    });
    load();
  })();
</script>

