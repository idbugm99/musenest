<!-- Luxury Calendar Page - Using Universal Calendar System with Luxury Styling -->

<!-- Luxury Hero Section -->
<section class="luxury-calendar-hero py-20 relative overflow-hidden" data-aos="fade-in">
    <!-- Luxury Floating Elements -->
    <div class="luxury-hero-floating-elements">
        <div class="luxury-floating-element luxury-element-calendar">üìÖ</div>
        <div class="luxury-floating-element luxury-element-clock">üïê</div>
        <div class="luxury-floating-element luxury-element-crown">üëë</div>
        <div class="luxury-floating-element luxury-element-gem">üíé</div>
    </div>
    
    <div class="max-w-6xl mx-auto text-center px-4 sm:px-6 lg:px-8 relative z-20">
        <!-- Luxury Calendar Icon -->
        <div class="text-6xl mb-8 text-luxury-gold" data-aos="fade-down" data-aos-delay="200">
            <i class="fas fa-calendar-alt"></i>
        </div>
        
        <!-- Luxury Page Title -->
        <h1 class="luxury-hero-title text-4xl md:text-6xl font-bold mb-6" data-aos="fade-up" data-aos-delay="400">
            {{#if calendar_content.page_title}}{{calendar_content.page_title}}{{else}}Royal Appointment Calendar{{/if}}
        </h1>
        
        <!-- Luxury Page Subtitle -->
        {{#if calendar_content.page_subtitle}}
        <p class="luxury-hero-subtitle text-xl max-w-3xl mx-auto mb-8" data-aos="fade-up" data-aos-delay="600">
            {{calendar_content.page_subtitle}}
        </p>
        {{else}}
        <p class="luxury-hero-subtitle text-xl max-w-3xl mx-auto mb-8" data-aos="fade-up" data-aos-delay="600">
            View my current location and availability. Check where I am traveling and when I am available for exclusive appointments.
        </p>
        {{/if}}
        
        <!-- Luxury Decorative Divider -->
        <div class="luxury-hero-divider" data-aos="fade-up" data-aos-delay="800">
            <div class="luxury-divider-line-left"></div>
            <div class="luxury-divider-crown">
                <i class="fas fa-crown"></i>
            </div>
            <div class="luxury-divider-line-right"></div>
        </div>
    </div>
</section>

<!-- Main Calendar Section -->
<section class="py-16 luxury-calendar-section">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- View Toggle (Mobile First) -->
        <div class="flex justify-center mb-6 md:hidden">
            <div class="luxury-card rounded-lg p-1 shadow-sm">
                <button id="list-view-btn" class="px-4 py-2 rounded-lg text-sm font-medium transition-colors active luxury-btn-accent">
                    List
                </button>
                <button id="month-view-btn" class="px-4 py-2 rounded-lg text-sm font-medium transition-colors luxury-text-secondary">
                    Month
                </button>
            </div>
        </div>
        
        <!-- Calendar Navigation -->
        {{#if calendar_content.calendar_navigation_visible}}
        <div class="flex justify-between items-center mb-8" data-aos="fade-up">
            <button id="prev-month" class="luxury-nav-btn">
                <i class="fas fa-chevron-left mr-2"></i>
                <span>Previous</span>
            </button>
            
            <h2 id="month-title" class="luxury-month-title text-3xl font-bold text-center"></h2>
            
            <button id="next-month" class="luxury-nav-btn">
                <span>Next</span>
                <i class="fas fa-chevron-right ml-2"></i>
            </button>
        </div>
        {{/if}}

        <!-- Calendar Container -->
        <div id="calendar-container" class="luxury-calendar-container rounded-lg shadow-lg overflow-hidden mb-8">
            <!-- Calendar Header -->
            <div class="grid grid-cols-7 luxury-calendar-header">
                <div class="p-4 text-center font-semibold luxury-day-header border-r luxury-border-light">Sun</div>
                <div class="p-4 text-center font-semibold luxury-day-header border-r luxury-border-light">Mon</div>
                <div class="p-4 text-center font-semibold luxury-day-header border-r luxury-border-light">Tue</div>
                <div class="p-4 text-center font-semibold luxury-day-header border-r luxury-border-light">Wed</div>
                <div class="p-4 text-center font-semibold luxury-day-header border-r luxury-border-light">Thu</div>
                <div class="p-4 text-center font-semibold luxury-day-header border-r luxury-border-light">Fri</div>
                <div class="p-4 text-center font-semibold luxury-day-header">Sat</div>
            </div>
            
            <!-- Calendar Body -->
            <div id="calendar-grid" class="luxury-calendar-grid">
                <div class="text-center py-12 luxury-text-secondary">
                    <div class="luxury-loading-spinner animate-spin rounded-full h-8 w-8 mx-auto mb-4"></div>
                    <div class="luxury-loading-text">Loading royal calendar...</div>
                </div>
            </div>
        </div>
        
        <!-- List View -->
        <div id="list-container" class="luxury-card rounded-lg shadow-lg p-6 mb-8 hidden">
            <div id="list-view">
                <div class="text-center py-12 luxury-text-secondary">
                    <div class="luxury-loading-spinner animate-spin rounded-full h-8 w-8 mx-auto mb-4"></div>
                    <div class="luxury-loading-text">Loading events...</div>
                </div>
            </div>
        </div>

        <!-- Calendar Legend -->
        <div class="flex flex-wrap justify-center gap-6 mb-8" data-aos="fade-up" data-aos-delay="400">
            <div class="luxury-legend-item">
                <div class="luxury-legend-indicator luxury-available"></div>
                <span class="luxury-legend-label">Available</span>
            </div>
            <div class="luxury-legend-item">
                <div class="luxury-legend-indicator luxury-travel"></div>
                <span class="luxury-legend-label">Travel</span>
            </div>
            <div class="luxury-legend-item">
                <div class="luxury-legend-indicator luxury-vacation"></div>
                <span class="luxury-legend-label">Vacation</span>
            </div>
            <div class="luxury-legend-item">
                <div class="luxury-legend-indicator luxury-unavailable"></div>
                <span class="luxury-legend-label">Unavailable</span>
            </div>
        </div>

        <!-- Luxury Contact Call-to-Action -->
        {{#if calendar_content.cta_visible}}
        <div class="luxury-calendar-cta text-center hover:shadow-lg transition-shadow" data-aos="fade-up" data-aos-delay="600">
            <div class="luxury-cta-ornament">
                <i class="fas fa-gem"></i>
            </div>
            <h3 class="luxury-cta-title text-2xl font-bold mb-4">
                {{#if calendar_content.cta_title}}{{calendar_content.cta_title}}{{else}}Schedule an Imperial Appointment{{/if}}
            </h3>
            <p class="luxury-cta-description mb-8 max-w-2xl mx-auto leading-relaxed">
                {{#if calendar_content.cta_text}}{{calendar_content.cta_text}}{{else}}Contact me to schedule an exclusive appointment when I am in your area.{{/if}}
            </p>
            <div class="luxury-cta-buttons flex flex-col sm:flex-row justify-center gap-4 max-w-md mx-auto">
                <a href="/{{modelSlug}}/contact{{previewParam}}" class="luxury-btn luxury-btn-primary">
                    <i class="fas fa-envelope mr-2"></i>
                    <span>{{#if calendar_content.cta_button_text}}{{calendar_content.cta_button_text}}{{else}}Contact Me{{/if}}</span>
                </a>
                <a href="/{{modelSlug}}/rates{{previewParam}}" class="luxury-btn luxury-btn-secondary">
                    <i class="fas fa-star mr-2"></i>
                    <span>View Services</span>
                </a>
            </div>
        </div>
        {{/if}}
    </div>
</section>

<!-- Calendar JavaScript -->
<script>
(function() {
    const slug = {{{json modelSlug}}};
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth() + 1;
    
    const calendarGrid = document.getElementById('calendar-grid');
    const monthTitle = document.getElementById('month-title');
    const prevButton = document.getElementById('prev-month');
    const nextButton = document.getElementById('next-month');
    
    async function loadCalendar(year = currentYear, month = currentMonth) {
        try {
            const response = await fetch(`/api/model-calendar/${slug}?year=${year}&month=${month}`);
            const data = await response.json();
            
            if (!data.success) {
                throw new Error(data.error || 'Failed to load calendar');
            }
            
            const calendar = data.data.calendar;
            currentYear = year;
            currentMonth = month;
            
            // Update month title
            if (monthTitle) {
                monthTitle.textContent = `${calendar.monthName} ${calendar.year}`;
            }
            
            // Generate calendar grid
            let gridHtml = '';
            
            const cellHeights = {
                desktop: 92,
                tablet: 64,
                mobile: 56
            };
            
            const screenWidth = window.innerWidth;
            const cellHeight = screenWidth >= 1024 ? cellHeights.desktop : 
                             screenWidth >= 768 ? cellHeights.tablet : cellHeights.mobile;
            
            calendar.weeks.forEach((week, weekIndex) => {
                gridHtml += `<div class="grid grid-cols-7 border-t luxury-border-light relative" style="min-height: ${cellHeight + (week.spans?.length * 28 || 0)}px;">`;
                
                // Day cells
                week.days.forEach((day, dayIndex) => {
                    const isToday = day === new Date().getDate() && 
                                  currentMonth === (new Date().getMonth() + 1) && 
                                  currentYear === new Date().getFullYear();
                    
                    gridHtml += `
                        <div class="p-2 border-r luxury-border-light ${day === 0 ? 'luxury-bg-muted' : ''} luxury-calendar-day relative" style="min-height: ${cellHeight}px;">
                            ${day > 0 ? `
                                <div class="text-sm font-semibold mb-2 ${isToday ? 'luxury-today-number' : 'luxury-day-number'} relative z-10">
                                    ${day}
                                </div>
                            ` : ''}
                        </div>
                    `;
                });
                
                // Add availability spans positioned absolutely over the week
                if (week.spans) {
                    week.spans.forEach((span, spanIndex) => {
                        const eventColors = {
                            'available': '#28a745',
                            'travel': '#D4AF37',
                            'vacation': '#ffc107', 
                            'unavailable': '#6c757d'
                        };
                        
                        const textColors = {
                            'available': 'white',
                            'travel': '#2C1810',
                            'vacation': '#2C1810',
                            'unavailable': 'white'
                        };
                        
                        const bgColor = eventColors[span.status] || span.color;
                        const textColor = textColors[span.status] || 'white';
                        
                        gridHtml += `
                            <div class="absolute text-xs px-2 py-1 z-10 flex items-center justify-center font-medium luxury-event-span rounded"
                                 style="background-color: ${bgColor};
                                        color: ${textColor};
                                        left: ${span.start_pos * 14.285714}%; 
                                        width: ${span.width * 14.285714}%;
                                        top: ${32 + (spanIndex * 28)}px; 
                                        height: 24px;
                                        margin-left: 1px;
                                        margin-right: 1px;">
                                <span class="truncate text-xs overflow-hidden text-ellipsis whitespace-nowrap">
                                    ${span.location}
                                    ${span.status === 'vacation' ? ' - Vacation' : ''}
                                </span>
                            </div>
                        `;
                    });
                }
                
                gridHtml += '</div>';
            });
            
            // Generate list view
            generateListView(calendar);
            
            if (calendarGrid) {
                calendarGrid.innerHTML = gridHtml;
            }
            
        } catch (error) {
            console.error('Error loading calendar:', error);
            const errorHtml = `
                <div class="text-center py-12 luxury-error">
                    <div class="text-4xl mb-4">üëë</div>
                    <h3 class="text-lg font-semibold mb-2 luxury-error-title">Royal Calendar Unavailable</h3>
                    <p class="luxury-error-text">Please contact me directly for availability information.</p>
                </div>
            `;
            
            if (calendarGrid) {
                calendarGrid.innerHTML = errorHtml;
            }
            
            const listView = document.getElementById('list-view');
            if (listView) {
                listView.innerHTML = errorHtml;
            }
        }
    }
    
    function generateListView(calendar) {
        const listView = document.getElementById('list-view');
        if (!listView) return;
        
        let listHtml = '';
        const events = [];
        
        // Collect all events from calendar data
        calendar.weeks.forEach(week => {
            if (week.spans) {
                week.spans.forEach(span => {
                    const startDate = new Date(calendar.year, calendar.month - 1, span.start_day);
                    events.push({
                        date: startDate,
                        status: span.status,
                        location: span.location,
                        duration: span.duration || 1
                    });
                });
            }
        });
        
        // Sort events by date
        events.sort((a, b) => a.date - b.date);
        
        const eventColors = {
            'available': '#28a745',
            'travel': '#D4AF37',
            'vacation': '#ffc107',
            'unavailable': '#6c757d'
        };
        
        // Generate list items
        if (events.length === 0) {
            listHtml = '<div class="text-center py-8 luxury-text-secondary">No royal appointments this month</div>';
        } else {
            events.forEach(event => {
                const dateStr = event.date.toLocaleDateString('en-US', { 
                    weekday: 'short', 
                    month: 'short', 
                    day: 'numeric' 
                });
                
                listHtml += `
                    <div class="luxury-list-item flex items-center justify-between py-3 border-b luxury-border-light last:border-b-0">
                        <div class="flex items-center">
                            <div class="w-3 h-3 rounded-full mr-3" style="background-color: ${eventColors[event.status]}"></div>
                            <div>
                                <div class="font-medium luxury-list-date">${dateStr}</div>
                                <div class="text-sm luxury-list-status">${event.status.charAt(0).toUpperCase() + event.status.slice(1)}</div>
                            </div>
                        </div>
                        <div class="text-sm font-medium luxury-list-location">
                            ${event.location}
                        </div>
                    </div>
                `;
            });
        }
        
        listView.innerHTML = listHtml;
    }
    
    // Navigation event listeners
    if (prevButton) {
        prevButton.addEventListener('click', () => {
            if (currentMonth === 1) {
                currentMonth = 12;
                currentYear--;
            } else {
                currentMonth--;
            }
            loadCalendar(currentYear, currentMonth);
        });
    }
    
    if (nextButton) {
        nextButton.addEventListener('click', () => {
            if (currentMonth === 12) {
                currentMonth = 1;
                currentYear++;
            } else {
                currentMonth++;
            }
            loadCalendar(currentYear, currentMonth);
        });
    }
    
    // Keyboard support
    document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') {
            e.preventDefault();
            prevButton?.click();
        } else if (e.key === 'ArrowRight') {
            e.preventDefault();
            nextButton?.click();
        }
    });
    
    // View toggle functionality
    const listViewBtn = document.getElementById('list-view-btn');
    const monthViewBtn = document.getElementById('month-view-btn');
    const calendarContainer = document.getElementById('calendar-container');
    const listContainer = document.getElementById('list-container');
    
    let currentView = window.innerWidth <= 640 ? 'list' : 'month';
    
    function switchView(view) {
        currentView = view;
        
        if (view === 'list') {
            calendarContainer.classList.add('hidden');
            listContainer.classList.remove('hidden');
            if (listViewBtn) {
                listViewBtn.classList.add('active', 'luxury-btn-accent');
                listViewBtn.classList.remove('luxury-text-secondary');
            }
            if (monthViewBtn) {
                monthViewBtn.classList.remove('active', 'luxury-btn-accent');
                monthViewBtn.classList.add('luxury-text-secondary');
            }
        } else {
            calendarContainer.classList.remove('hidden');
            listContainer.classList.add('hidden');
            if (monthViewBtn) {
                monthViewBtn.classList.add('active', 'luxury-btn-accent');
                monthViewBtn.classList.remove('luxury-text-secondary');
            }
            if (listViewBtn) {
                listViewBtn.classList.remove('active', 'luxury-btn-accent');
                listViewBtn.classList.add('luxury-text-secondary');
            }
        }
    }
    
    if (listViewBtn && monthViewBtn) {
        listViewBtn.addEventListener('click', () => switchView('list'));
        monthViewBtn.addEventListener('click', () => switchView('month'));
    }
    
    // Set initial view
    switchView(currentView);
    
    // Load initial calendar
    loadCalendar();
})();
</script>

<!-- Luxury Calendar Styling -->
<style>
/* Luxury Calendar Hero Styles */
.luxury-calendar-hero {
    background: linear-gradient(135deg, #2C1810 0%, #8B4513 25%, #D4AF37 50%, #B8860B 75%, #8B4513 100%);
    position: relative;
    min-height: 40vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

.luxury-hero-floating-elements {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
}

.luxury-floating-element {
    position: absolute;
    font-size: 2.5rem;
    opacity: 0.7;
    animation: luxury-hero-float 8s ease-in-out infinite;
}

.luxury-element-calendar {
    top: 15%;
    left: 8%;
    animation-delay: 0s;
    font-size: 3rem;
}

.luxury-element-clock {
    top: 25%;
    right: 12%;
    animation-delay: 1.5s;
    font-size: 2.2rem;
}

.luxury-element-crown {
    top: 65%;
    left: 5%;
    animation-delay: 3s;
    font-size: 2.8rem;
}

.luxury-element-gem {
    bottom: 20%;
    right: 15%;
    animation-delay: 6s;
    font-size: 2rem;
}

@keyframes luxury-hero-float {
    0%, 100% { 
        transform: translateY(0px) rotate(0deg) scale(1);
        opacity: 0.7;
    }
    25% { 
        transform: translateY(-20px) rotate(5deg) scale(1.1);
        opacity: 0.9;
    }
    50% { 
        transform: translateY(-10px) rotate(-3deg) scale(1.05);
        opacity: 1;
    }
    75% { 
        transform: translateY(-25px) rotate(8deg) scale(1.15);
        opacity: 0.8;
    }
}

.luxury-hero-title {
    color: #F5F5DC;
    text-shadow: 0 4px 20px rgba(0, 0, 0, 0.5), 0 2px 10px rgba(212, 175, 55, 0.3);
    letter-spacing: 3px;
    font-family: Georgia, serif;
}

.luxury-hero-subtitle {
    color: rgba(245, 245, 220, 0.9);
    font-weight: 400;
    letter-spacing: 1px;
    line-height: 1.7;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    font-style: italic;
    font-family: Georgia, serif;
}

.luxury-hero-divider {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    margin-top: 3rem;
}

.luxury-divider-line-left,
.luxury-divider-line-right {
    width: 120px;
    height: 3px;
    background: linear-gradient(90deg, transparent, #D4AF37, #F5F5DC);
    border-radius: 2px;
}

.luxury-divider-crown {
    font-size: 2rem;
    color: #D4AF37;
    animation: luxury-divider-crown-glow 3s infinite ease-in-out;
    filter: drop-shadow(0 0 15px rgba(212, 175, 55, 0.4));
}

@keyframes luxury-divider-crown-glow {
    0%, 100% { 
        opacity: 0.8;
        transform: scale(1) rotate(0deg);
    }
    50% { 
        opacity: 1;
        transform: scale(1.2) rotate(10deg);
    }
}

/* Luxury Calendar Section */
.luxury-calendar-section {
    background: linear-gradient(180deg, #F5F5DC 0%, rgba(245, 245, 220, 0.9) 100%);
}

/* Navigation Buttons */
.luxury-nav-btn {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #D4AF37 0%, #B8860B 100%);
    color: #2C1810;
    border: none;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 8px 25px rgba(44, 24, 16, 0.2);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-family: Georgia, serif;
}

.luxury-nav-btn:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 12px 35px rgba(212, 175, 55, 0.3);
}

.luxury-month-title {
    color: #D4AF37;
    font-family: Georgia, serif;
    text-shadow: 0 4px 20px rgba(0, 0, 0, 0.5), 0 2px 10px rgba(212, 175, 55, 0.3);
    -webkit-text-fill-color: #D4AF37;
    letter-spacing: 1px;
}

/* Calendar Container */
.luxury-calendar-container {
    background: linear-gradient(145deg, #F5F5DC, rgba(245, 245, 220, 0.9));
    box-shadow: 0 25px 60px rgba(44, 24, 16, 0.1);
    border: 2px solid rgba(212, 175, 55, 0.2);
}

.luxury-calendar-header {
    background: linear-gradient(135deg, #D4AF37 0%, #B8860B 100%);
    border-bottom: 2px solid rgba(212, 175, 55, 0.3);
}

.luxury-day-header {
    color: #2C1810;
    font-family: Georgia, serif;
    font-weight: 700;
}

.luxury-border-light {
    border-color: rgba(44, 24, 16, 0.1);
}

.luxury-calendar-day {
    background: rgba(245, 245, 220, 0.7);
    transition: all 0.3s ease;
}

.luxury-calendar-day:hover {
    background: rgba(212, 175, 55, 0.1);
    transform: scale(1.02);
}

.luxury-day-number {
    color: #2C1810;
    font-family: Georgia, serif;
}

.luxury-today-number {
    color: #D4AF37;
    font-family: Georgia, serif;
    font-weight: bold;
    background: linear-gradient(45deg, rgba(212, 175, 55, 0.2), rgba(212, 175, 55, 0.1));
    border-radius: 50%;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.luxury-bg-muted {
    background: rgba(245, 245, 220, 0.3);
}

.luxury-event-span {
    box-shadow: 0 2px 8px rgba(44, 24, 16, 0.15);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(4px);
}

/* Loading States */
.luxury-loading-spinner {
    border: 3px solid #D4AF37;
    border-top-color: transparent;
}

.luxury-loading-text {
    color: #2C1810;
    font-family: Georgia, serif;
    font-weight: 500;
    letter-spacing: 0.5px;
}

.luxury-text-secondary {
    color: rgba(44, 24, 16, 0.7);
    font-family: Georgia, serif;
}

/* Legend */
.luxury-legend-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 1.5rem;
    background: rgba(245, 245, 220, 0.8);
    border-radius: 50px;
    border: 1px solid rgba(212, 175, 55, 0.3);
    box-shadow: 0 4px 15px rgba(44, 24, 16, 0.2);
}

.luxury-legend-indicator {
    width: 16px;
    height: 16px;
    border-radius: 4px;
    box-shadow: 0 2px 8px rgba(44, 24, 16, 0.2);
}

.luxury-available { background: linear-gradient(135deg, #28a745, #1e7e34); }
.luxury-travel { background: linear-gradient(135deg, #D4AF37, #B8860B); }
.luxury-vacation { background: linear-gradient(135deg, #ffc107, rgba(212, 175, 55, 0.8)); }
.luxury-unavailable { background: linear-gradient(135deg, #6c757d, #495057); }

.luxury-legend-label {
    font-weight: 600;
    color: #2C1810;
    font-size: 1rem;
    letter-spacing: 0.5px;
    font-family: Georgia, serif;
}

/* CTA Section */
.luxury-calendar-cta {
    background: linear-gradient(145deg, rgba(212, 175, 55, 0.1) 0%, rgba(212, 175, 55, 0.05) 100%);
    border: 2px solid rgba(212, 175, 55, 0.3);
    border-radius: 30px;
    padding: 4rem 3rem;
    position: relative;
    overflow: hidden;
}

.luxury-cta-ornament {
    font-size: 3rem;
    color: #D4AF37;
    margin-bottom: 2rem;
    animation: luxury-cta-ornament-glow 4s infinite ease-in-out;
}

@keyframes luxury-cta-ornament-glow {
    0%, 100% { opacity: 0.8; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.1); }
}

.luxury-cta-title {
    color: #D4AF37;
    font-family: Georgia, serif;
    text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3), 0 2px 10px rgba(212, 175, 55, 0.2);
    -webkit-text-fill-color: #D4AF37;
    letter-spacing: 1px;
}

.luxury-cta-description {
    color: #2C1810;
    font-family: Georgia, serif;
    font-weight: 400;
}

.luxury-cta-buttons {
    display: flex;
    justify-content: center;
    gap: 2rem;
    flex-wrap: wrap;
}

/* Luxury Buttons */
.luxury-btn {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 1rem 2.5rem;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1.1rem;
    text-decoration: none;
    transition: all 0.3s ease;
    cursor: pointer;
    border: none;
    overflow: hidden;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-family: Georgia, serif;
}

.luxury-btn-primary {
    background: linear-gradient(135deg, #D4AF37 0%, #B8860B 100%);
    color: #2C1810;
    box-shadow: 0 8px 25px rgba(44, 24, 16, 0.2);
}

.luxury-btn-primary:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 15px 40px rgba(212, 175, 55, 0.3);
}

.luxury-btn-secondary {
    background: transparent;
    color: #D4AF37;
    border: 2px solid #D4AF37;
    box-shadow: 0 8px 25px rgba(44, 24, 16, 0.2);
}

.luxury-btn-secondary:hover {
    background: #D4AF37;
    color: #2C1810;
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 15px 40px rgba(44, 24, 16, 0.2);
}

.luxury-btn-accent {
    background: #D4AF37;
    color: #2C1810;
}

/* List View Styles */
.luxury-list-item {
    transition: all 0.3s ease;
}

.luxury-list-item:hover {
    background: rgba(212, 175, 55, 0.05);
}

.luxury-list-date,
.luxury-list-location {
    color: #2C1810;
    font-family: Georgia, serif;
}

.luxury-list-status {
    color: rgba(44, 24, 16, 0.7);
    font-family: Georgia, serif;
}

/* Card Styles */
.luxury-card {
    background: rgba(245, 245, 220, 0.9);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(212, 175, 55, 0.2);
    box-shadow: 0 4px 15px rgba(44, 24, 16, 0.1);
}

/* Error States */
.luxury-error {
    color: #2C1810;
}

.luxury-error-title {
    color: #D4AF37;
    font-family: Georgia, serif;
}

.luxury-error-text {
    color: rgba(44, 24, 16, 0.7);
    font-family: Georgia, serif;
}

/* Responsive Design */
@media (max-width: 768px) {
    .luxury-calendar-hero {
        min-height: 35vh;
        padding: 4rem 0 3rem;
    }
    
    .luxury-hero-title {
        font-size: 3.5rem;
        letter-spacing: 2px;
    }
    
    .luxury-hero-subtitle {
        font-size: 1.2rem;
        padding: 0 1rem;
    }
    
    .luxury-floating-element {
        font-size: 2rem;
    }
    
    .luxury-element-calendar {
        font-size: 2.5rem;
    }
    
    .luxury-month-title {
        font-size: 2rem;
    }
    
    .luxury-nav-btn {
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
    }
    
    .luxury-cta-title {
        font-size: 2rem;
    }
    
    .luxury-cta-buttons {
        flex-direction: column;
        align-items: center;
    }
    
    .luxury-btn {
        width: 100%;
        max-width: 280px;
        justify-content: center;
    }
}

@media (max-width: 480px) {
    .luxury-calendar-hero {
        min-height: 30vh;
        padding: 3rem 0 2rem;
    }
    
    .luxury-hero-title {
        font-size: 2.8rem;
        letter-spacing: 1px;
    }
    
    .luxury-hero-subtitle {
        font-size: 1.1rem;
        padding: 0 1.5rem;
    }
    
    .luxury-floating-element {
        font-size: 1.8rem;
    }
    
    .luxury-element-calendar {
        font-size: 2.2rem;
    }
    
    .luxury-divider-line-left,
    .luxury-divider-line-right {
        width: 80px;
    }
    
    .luxury-calendar-cta {
        padding: 3rem 1.5rem;
        margin: 0 1rem;
    }
}

/* Calendar view toggle styles */
#list-view-btn.active,
#month-view-btn.active {
    background: #D4AF37;
    color: #2C1810;
}

#list-view-btn,
#month-view-btn {
    font-family: Georgia, serif;
    font-weight: 600;
}

#list-view-btn:hover,
#month-view-btn:hover {
    opacity: 0.8;
}

/* Responsive behavior */
@media (min-width: 641px) {
    #list-container {
        display: none !important;
    }
}

@media (max-width: 640px) {
    #calendar-container {
        display: none !important;
    }
    #list-container {
        display: block !important;
    }
}

/* Loading animation */
@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

/* Calendar responsiveness */
@media (max-width: 768px) {
    .grid.grid-cols-7 {
        font-size: 0.875rem;
    }
    
    #month-title {
        font-size: 1.5rem;
    }
    
    #prev-month, #next-month {
        padding: 0.75rem 1rem;
        font-size: 0.875rem;
    }
    
    #prev-month span, #next-month span {
        display: none;
    }
}
</style>