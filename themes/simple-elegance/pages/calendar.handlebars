<!-- Beautiful Roses Calendar Page -->

<!-- Page Header -->
<section style="padding: 4rem 2rem 2rem; background: var(--theme-bg-alt); text-align: center;">
    <div style="max-width: 800px; margin: 0 auto;">
        <div class="section-header">
            <h1>{{#if calendar_content.page_title}}{{calendar_content.page_title}}{{else}}My Calendar{{/if}}</h1>
            {{#if calendar_content.page_subtitle}}
            <p style="font-size: 1.25rem; color: var(--theme-text-subtle); margin-top: 1rem;">{{calendar_content.page_subtitle}}</p>
            {{else}}
            <p style="font-size: 1.25rem; color: var(--theme-text-subtle); margin-top: 1rem;">View my current location and availability. Check where I'm traveling and when I'm available for appointments.</p>
            {{/if}}
        </div>
    </div>
</section>

<!-- Calendar Navigation -->
<section style="padding: 2rem; background: var(--theme-surface); border-bottom: 1px solid var(--theme-border);">
    <div style="max-width: 1200px; margin: 0 auto;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
            <button id="prev-month" class="btn rose-btn-secondary">← Previous</button>
            <h2 id="month-title" style="margin: 0; color: var(--theme-primary);"></h2>
            <button id="next-month" class="btn rose-btn-secondary">Next →</button>
        </div>
        
        <!-- View Toggle (Mobile Only) -->
        <div id="view-toggle" style="display: none; justify-content: center; gap: 1rem; margin-bottom: 2rem;">
            <button id="list-view-btn" class="btn rose-btn-secondary">List View</button>
            <button id="month-view-btn" class="btn rose-btn">Month View</button>
        </div>
    </div>
</section>

<!-- Calendar Container -->
<section style="padding: 2rem; background: var(--theme-bg-alt);">
    <div style="max-width: 1200px; margin: 0 auto;">
        
        <!-- Calendar Grid (Desktop) -->
        <div id="calendar-container">
            <!-- Calendar Header -->
            <div style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 1px; background: var(--theme-border); border-radius: 8px 8px 0 0; overflow: hidden;">
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Sun</div>
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Mon</div>
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Tue</div>
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Wed</div>
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Thu</div>
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Fri</div>
                <div style="background: var(--theme-surface); padding: 1rem; text-align: center; font-weight: 600; color: var(--theme-primary);">Sat</div>
            </div>
            
            <!-- Calendar Body (Generated by JavaScript) -->
            <div id="calendar-grid" style="display: grid; grid-template-columns: repeat(7, 1fr); gap: 1px; background: var(--theme-border); border-radius: 0 0 8px 8px; overflow: hidden; min-height: 300px;">
                <div style="display: flex; align-items: center; justify-content: center; background: var(--theme-surface); padding: 2rem; grid-column: span 7;">
                    <div style="text-align: center; color: var(--theme-text-subtle);">
                        <div style="width: 48px; height: 48px; margin: 0 auto 1rem; color: var(--theme-primary);">
                            <svg viewBox="0 0 24 24" fill="currentColor" style="width: 100%; height: 100%;">
                                <path d="M12 15.39l-3.76 2.27.99-4.28L5.64 9.87l4.38-.38L12 5.09l1.98 4.4 4.38.38-3.59 3.51.99 4.28L12 15.39z"/>
                            </svg>
                        </div>
                        <p>Loading calendar...</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- List View (Mobile) -->
        <div id="list-container" style="display: none;">
            <div id="list-view">
                <div style="text-align: center; padding: 3rem; color: var(--theme-text-subtle);">
                    <p>Loading events...</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Event Legend -->
<section style="padding: 2rem; background: var(--theme-surface);">
    <div style="max-width: 1200px; margin: 0 auto;">
        <div class="section-header" style="margin-bottom: 2rem;">
            <h3>Legend</h3>
        </div>
        
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem;">
            <div style="display: flex; align-items: center; gap: 0.75rem;">
                <div style="width: 20px; height: 20px; background: var(--theme-success); border-radius: 4px;"></div>
                <span>Available</span>
            </div>
            <div style="display: flex; align-items: center; gap: 0.75rem;">
                <div style="width: 20px; height: 20px; background: var(--theme-primary); border-radius: 4px;"></div>
                <span>Travel</span>
            </div>
            <div style="display: flex; align-items: center; gap: 0.75rem;">
                <div style="width: 20px; height: 20px; background: var(--theme-warning); border-radius: 4px;"></div>
                <span>Vacation</span>
            </div>
            <div style="display: flex; align-items: center; gap: 0.75rem;">
                <div style="width: 20px; height: 20px; background: var(--theme-text-subtle); border-radius: 4px;"></div>
                <span>Unavailable</span>
            </div>
        </div>
    </div>
</section>

<!-- Contact CTA -->
<section style="padding: 6rem 2rem; background: linear-gradient(135deg, var(--theme-primary) 0%, var(--theme-accent) 100%); color: white; text-align: center;">
    <div style="max-width: 800px; margin: 0 auto;">
        <h2 style="margin-bottom: 1rem; color: white;">Ready to Book?</h2>
        <p style="font-size: 1.125rem; margin-bottom: 3rem; color: rgba(255, 255, 255, 0.9);">
            See something that works for you? Let's connect and plan our time together.
        </p>
        <a href="/{{modelSlug}}/contact{{previewParam}}" 
           style="display: inline-flex; align-items: center; gap: 0.5rem; padding: 0.75rem 2rem; background: white; color: var(--theme-primary); border-radius: 8px; font-weight: 600; text-decoration: none; transition: all 0.3s ease; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);"
           onmouseover="this.style.transform='translateY(-2px)'"
           onmouseout="this.style.transform='translateY(0)'">
            Contact Me
        </a>
    </div>
</section>

<!-- Calendar JavaScript -->
<script>
(function() {
    const slug = '{{modelSlug}}';
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth() + 1;
    
    const monthTitle = document.getElementById('month-title');
    const calendarGrid = document.getElementById('calendar-grid');
    const prevButton = document.getElementById('prev-month');
    const nextButton = document.getElementById('next-month');
    const listContainer = document.getElementById('list-container');
    const calendarContainer = document.getElementById('calendar-container');
    
    // Month names
    const monthNames = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ];
    
    // Core calendar loading function
    async function loadCalendar(year = currentYear, month = currentMonth) {
        try {
            // Add aggressive cache busting to avoid 304 responses
            const timestamp = Date.now();
            const random = Math.random().toString(36).substring(2);
            const response = await fetch(`/api/model-calendar/${slug}?year=${year}&month=${month}&_t=${timestamp}&_r=${random}`, {
                headers: {
                    'Cache-Control': 'no-cache, no-store, must-revalidate',
                    'Pragma': 'no-cache',
                    'Expires': '0'
                }
            });
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const data = await response.json();
            console.log('Calendar API response:', data);
            
            if (!data.success) {
                throw new Error(data.error || 'Failed to load calendar');
            }
            
            if (!data.data || !data.data.calendar) {
                throw new Error('Invalid calendar data structure');
            }
            
            currentYear = year;
            currentMonth = month;
            
            // Update month title
            monthTitle.textContent = `${monthNames[month - 1]} ${year}`;
            
            // Generate calendar grid
            generateCalendarGrid(data.data.calendar);
            
        } catch (error) {
            console.error('Error loading calendar:', error);
            showErrorState(error.message);
        }
    }
    
    // Generate calendar grid
    function generateCalendarGrid(calendar) {
        if (!calendar.weeks) {
            showErrorState();
            return;
        }
        
        let gridHtml = '';
        
        // Generate weeks
        calendar.weeks.forEach(week => {
            week.days.forEach((day, dayIndex) => {
                const isToday = day > 0 && day === new Date().getDate() && 
                              currentMonth === (new Date().getMonth() + 1) && 
                              currentYear === new Date().getFullYear();
                
                if (day === 0) {
                    // Empty cell for previous/next month
                    gridHtml += '<div style="background: var(--theme-bg-alt); min-height: 100px;"></div>';
                } else {
                    // Day cell with potential spans
                    const daySpans = week.spans.filter(span => 
                        dayIndex >= span.start_pos && dayIndex < span.start_pos + span.width
                    );
                    
                    let spanHtml = '';
                    daySpans.forEach(span => {
                        spanHtml += `
                            <div style="background: ${span.color || 'var(--theme-success)'}; color: white; font-size: 0.75rem; padding: 2px 4px; margin: 2px 0; border-radius: 3px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="${span.location} - ${span.notes || span.service_type}">
                                ${span.location}
                            </div>
                        `;
                    });
                    
                    gridHtml += `
                        <div style="background: var(--theme-surface); min-height: 100px; padding: 0.5rem; border: ${isToday ? '2px solid var(--theme-primary)' : '1px solid var(--theme-border)'};">
                            <div style="font-weight: ${isToday ? '600' : '400'}; color: ${isToday ? 'var(--theme-primary)' : 'var(--theme-text)'}; margin-bottom: 0.5rem;">${day}</div>
                            ${spanHtml}
                        </div>
                    `;
                }
            });
        });
        
        calendarGrid.innerHTML = gridHtml;
    }
    
    // Error state
    function showErrorState(errorMessage = 'Unable to load calendar. Please try again later.') {
        calendarGrid.innerHTML = `
            <div style="display: flex; align-items: center; justify-content: center; background: var(--theme-surface); padding: 3rem; grid-column: span 7;">
                <div style="text-align: center; color: var(--theme-text-subtle);">
                    <p>${errorMessage}</p>
                    <button onclick="loadCalendar()" style="margin-top: 1rem; padding: 0.5rem 1rem; background: var(--theme-primary); color: white; border: none; border-radius: 6px; cursor: pointer;">Retry</button>
                </div>
            </div>
        `;
    }
    
    // Navigation event listeners
    prevButton?.addEventListener('click', () => {
        if (currentMonth === 1) {
            currentMonth = 12;
            currentYear--;
        } else {
            currentMonth--;
        }
        loadCalendar(currentYear, currentMonth);
    });
    
    nextButton?.addEventListener('click', () => {
        if (currentMonth === 12) {
            currentMonth = 1;
            currentYear++;
        } else {
            currentMonth++;
        }
        loadCalendar(currentYear, currentMonth);
    });
    
    // Responsive view handling
    function handleResize() {
        const viewToggle = document.getElementById('view-toggle');
        if (window.innerWidth <= 768) {
            viewToggle.style.display = 'flex';
        } else {
            viewToggle.style.display = 'none';
            calendarContainer.style.display = 'block';
            listContainer.style.display = 'none';
        }
    }
    
    // Initialize
    window.addEventListener('resize', handleResize);
    handleResize();
    loadCalendar();
})();
</script>